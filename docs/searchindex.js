Search.setIndex({"docnames": ["faq", "getting_started/installation", "getting_started/quickstart", "index", "modules", "robots", "sql_mock", "sql_mock.bigquery", "sql_mock.clickhouse", "usage/bigquery/examples", "usage/bigquery/index", "usage/bigquery/settings", "usage/clickhouse/examples", "usage/clickhouse/index", "usage/clickhouse/settings", "usage/defining_table_mocks", "usage/examples", "usage/result_assertion", "usage/your_sql_query_to_test"], "filenames": ["faq.md", "getting_started/installation.md", "getting_started/quickstart.md", "index.rst", "modules.rst", "robots.txt", "sql_mock.rst", "sql_mock.bigquery.rst", "sql_mock.clickhouse.rst", "usage/bigquery/examples.md", "usage/bigquery/index.rst", "usage/bigquery/settings.md", "usage/clickhouse/examples.md", "usage/clickhouse/index.rst", "usage/clickhouse/settings.md", "usage/defining_table_mocks.md", "usage/examples.md", "usage/result_assertion.md", "usage/your_sql_query_to_test.md"], "titles": ["FAQ", "Installation", "Quickstart", "Welcome to SQL Mock\u2019s documentation!", "sql_mock", "&lt;no title&gt;", "sql_mock package", "sql_mock.bigquery package", "sql_mock.clickhouse package", "Example: Testing Subscription Counts in BigQuery", "BigQuery", "Settings", "Example: Testing Subscription Counts in ClickHouse", "Clickhouse", "Settings", "Defining table mocks", "Examples", "Result assertion", "Your SQL query to test"], "terms": {"we": [0, 1, 2, 6, 15, 17, 18], "ar": [0, 1, 6, 15, 17, 18], "plan": 0, "add": [0, 1, 6], "more": [0, 2, 15, 17], "howev": 0, "you": [0, 1, 2, 6, 11, 14, 15, 16, 17, 18], "can": [0, 1, 2, 6, 15, 16, 17, 18], "still": 0, "There": [0, 15, 17, 18], "onli": [0, 6, 15, 17, 18], "2": [0, 2, 3, 9, 12, 15, 17], "thing": [0, 15], "need": [0, 1, 3, 6, 11, 14, 15, 18], "first": 0, "inherit": [0, 6, 9, 12, 15], "from": [0, 1, 2, 6, 7, 8, 9, 12, 15, 17, 18], "sql_mock": [0, 1, 2, 9, 12, 15, 17], "table_mock": [0, 2, 9, 12, 15, 17], "basemockt": [0, 6, 7, 8, 15], "That": 0, "implement": 0, "_get_result": 0, "method": [0, 1, 2, 15, 17, 18], "which": [0, 6], "make": [0, 1], "sure": [0, 1], "fetch": 0, "result": [0, 2, 3, 6, 9, 12, 15], "queri": [0, 2, 3, 6, 9, 12, 15, 17], "e": [0, 2, 6, 15, 18], "g": [0, 2, 6, 15, 18], "produc": 0, "self": 0, "_generate_queri": 0, "return": [0, 6], "list": [0, 6], "dictionari": [0, 2, 6, 7, 8, 18], "look": 0, "one": [0, 6], "exist": 0, "client": 0, "librari": [0, 1, 3], "see": 0, "how": [0, 2, 10, 13, 15, 17, 18], "thi": [0, 1, 2, 3, 6, 7, 8, 10, 13, 15, 17, 18], "could": 0, "work": [0, 2], "bigquerymockt": [0, 2, 6, 7, 9, 15, 17], "might": 0, "set": [0, 3, 6, 10, 13], "well": [0, 15], "case": [0, 17, 18], "some": [0, 2, 15, 16, 18], "connect": [0, 11, 14], "avail": [0, 2], "within": [0, 6], "In": [0, 1, 2, 11, 14, 17, 18], "order": [0, 6, 11, 14], "them": [0, 6, 15, 18], "column": [0, 2, 6], "column_mock": [0, 2, 9, 12, 15, 17], "base": [0, 2, 6, 7, 8], "For": 0, "most": 0, "specifi": [0, 2, 15, 18], "dtype": [0, 6, 7, 8], "pars": 0, "input": [0, 2, 3, 6, 15, 17, 18], "A": [0, 6, 17], "good": 0, "practis": 0, "all": [0, 1, 2, 6, 15], "import": [0, 1, 2, 9, 12, 15, 17], "myfancedatabasecolumnmock": 0, "logic": [0, 17], "overwrit": [0, 6, 15], "default": [0, 2, 6, 7, 8, 9, 12, 15, 17, 18], "behavior": 0, "so": 0, "here": 0, "pass": [0, 3, 15], "int": [0, 2, 6, 7, 8, 9, 12, 15, 17, 18], "integ": [0, 7, 8], "string": [0, 2, 6, 7, 8, 9, 12, 15, 17, 18], "definit": [0, 15], "folk": 0, "commun": 0, "just": 0, "feel": 0, "free": 0, "pr": 0, "repositori": 0, "start": [0, 2], "implementd": 0, "basic": 0, "happen": [0, 6], "don": [0, 2], "t": [0, 2, 9, 12, 17], "find": [0, 16], "luckili": 0, "easili": [0, 15], "those": [0, 14, 15, 17, 18], "tool": 0, "provid": [0, 2, 3, 6, 14, 15], "The": [0, 1, 3, 6, 15, 18], "bigquerycolumnmock": [0, 6, 7], "write": 0, "usual": [0, 15], "correct": 0, "would": [0, 6], "later": 0, "cast": [0, 2], "col": [0, 2, 9, 12, 15, 17, 18], "express": [0, 2], "replac": [0, 2, 6, 7, 8], "bigqueri": [0, 1, 3, 6, 11, 15, 17], "myfancymissingcoltyp": 0, "fancymissingcoltyp": 0, "addit": 0, "forget": 0, "pypi": 1, "us": [1, 2, 3, 6, 9, 10, 11, 12, 13, 14, 15, 17], "pip": 1, "upgrad": 1, "sql": [1, 2, 5, 6, 9, 10, 11, 12, 13, 14, 15, 17], "mock": [1, 2, 5, 6, 9, 10, 11, 12, 13, 14, 17, 18], "clickhous": [1, 2, 3, 6, 14], "If": [1, 6], "modifi": 1, "sourc": 1, "code": 1, "depend": 1, "poetri": 1, "extra": [1, 7, 8], "conftest": 1, "py": [1, 15, 18], "file": [1, 6, 11, 15, 18], "root": 1, "your": [1, 2, 3, 9, 12, 14, 15, 17], "project": 1, "follow": [1, 14, 17, 18], "line": 1, "register_assert_rewrit": 1, "allow": [1, 3, 15], "get": [1, 2], "rich": 1, "comparison": [1, 6], "when": [1, 6, 14, 15, 17, 18], "assert_equ": [1, 2, 6, 9, 12, 17], "tabl": [1, 2, 6, 9, 12, 17, 18], "instanc": [1, 2, 6, 14, 15, 17, 18], "also": [1, 15, 17, 18], "icdiff": 1, "better": 1, "visibl": 1, "diff": 1, "fail": 1, "test": [1, 3, 6, 10, 11, 13, 14, 15, 17], "befor": 2, "dive": 2, "specif": [2, 10, 13, 18], "databas": [2, 6, 15], "scenario": [2, 3], "let": [2, 11, 17, 18], "": [2, 6, 17, 18], "simplifi": [2, 3], "exampl": [2, 3, 10, 13, 17, 18], "behind": 2, "scene": 2, "have": [2, 11, 14, 15, 17], "an": 2, "origin": [2, 6, 9, 12], "path": [2, 6, 7, 8, 15, 18], "query_for_result_t": [2, 15, 18], "select": [2, 6, 9, 12, 15, 17, 18], "id": [2, 15, 18], "data": [2, 3, 6, 9, 12, 15, 17, 18], "table1": [2, 15], "defin": [2, 3, 6, 7, 8, 9, 12, 17, 18], "built": [2, 17], "type": [2, 3, 6], "includ": [2, 17], "date": [2, 6, 7, 8, 9, 12, 17], "each": 2, "ha": 2, "own": 2, "subclass": 2, "class": [2, 3, 6, 7, 8, 9, 12, 15, 17, 18], "fit": 2, "along": 2, "valu": [2, 6], "our": [2, 17], "clickhousetablemock": [2, 6, 8, 12], "table_meta": [2, 3, 6, 9, 12, 15, 17], "table_ref": [2, 6, 9, 12, 15, 17, 18], "1": [2, 3, 6, 9, 12, 15, 17], "name": [2, 6, 7, 8, 15], "peter": [2, 15], "result_t": [2, 15, 18], "query_path": [2, 6, 15, 17, 18], "resultt": [2, 15, 18], "creat": [2, 3, 6, 9, 12, 15], "repres": [2, 6], "row": [2, 6], "kei": [2, 6], "correspond": 2, "user_data": 2, "both": 2, "martin": 2, "3": 2, "input_table_mock": 2, "from_dict": [2, 6, 9, 12, 17], "from_mock": [2, 3, 6, 9, 12, 15, 17], "object": [2, 6], "gener": [2, 6], "re": [2, 9, 12, 15, 17, 18], "input_data": [2, 6, 9, 12, 15, 17, 18], "refer": [2, 6], "common": 2, "cte": [2, 6, 17], "fill": 2, "dummi": 2, "It": [2, 3, 6], "roughli": 2, "compar": [2, 6], "someth": 2, "like": [2, 6, 15], "WITH": [2, 17], "data__table1": 2, "AS": [2, 9, 12, 17, 18], "union": [2, 6], "final": [2, 6, 17], "expect": [2, 6, 9, 12], "primari": 3, "purpos": 3, "i": [3, 6, 15, 18], "model": [3, 6, 7, 8, 9, 12, 15, 17, 18], "user": [3, 5, 6, 8, 9, 12, 14, 17, 18], "variou": 3, "consist": 3, "conveni": 3, "wai": [3, 15, 17], "execut": 3, "without": 3, "process": [3, 6], "massiv": 3, "amount": 3, "instal": 3, "recommend": [3, 15], "setup": 3, "pytest": 3, "quickstart": 3, "faq": 3, "my": 3, "system": 3, "support": 3, "yet": 3, "want": [3, 6, 14, 15, 17, 18], "what": 3, "should": [3, 6, 7, 8], "do": [3, 17], "mocktabl": [3, 6, 15], "columnmock": [3, 6, 7, 8], "contribut": 3, "am": 3, "miss": 3, "field": [3, 6, 7, 8], "option": 3, "decor": [3, 6, 15], "call": 3, "jinja": [3, 6], "templat": [3, 6], "assert": [3, 6, 9, 12], "subscript": [3, 10, 13, 17], "count": [3, 10, 13, 17], "index": 3, "modul": 3, "search": 3, "page": 3, "agent": 5, "sitemap": 5, "http": 5, "deeplcom": 5, "github": 5, "io": 5, "xml": 5, "decim": [6, 7, 8], "float": [6, 7, 8], "bigqueryset": [6, 7], "google_application_credenti": [6, 7, 11], "model_config": [6, 7, 8], "model_field": [6, 7, 8], "boolean": [6, 8], "clickhousecolumnmock": [6, 8], "datetim": [6, 8, 9, 12, 17], "datetime64": [6, 8], "clickhouseset": [6, 8], "host": [6, 8, 14], "password": [6, 8, 14], "port": [6, 8, 14], "none": [6, 7, 8], "nullabl": [6, 7, 8], "fals": [6, 7, 8], "str": [6, 7, 8], "indic": 6, "whether": 6, "null": 6, "cast_field": 6, "column_nam": 6, "to_sql": 6, "noinput": 6, "validationerror": 6, "dict": [6, 7, 8], "attribut": 6, "col1": 6, "_sql_mock_data": 6, "store": 6, "automatci": 6, "instanti": 6, "sqlmockdata": 6, "_sql_mock_meta": 6, "metadata": [6, 7, 8], "mocktablemeta": 6, "as_sql_input": 6, "combin": 6, "assert_cte_equ": [6, 17], "cte_nam": 6, "ignore_missing_kei": 6, "bool": [6, 7, 8], "ignore_ord": 6, "true": [6, 7, 8], "equal": 6, "paramet": 6, "against": 6, "present": 6, "argument": [6, 15, 18], "ignor": 6, "classmethod": 6, "query_template_kwarg": [6, 18], "run": [6, 11, 14, 17], "static": 6, "hold": 6, "pair": 6, "render": [6, 18], "cl": 6, "basemodel": 6, "dure": 6, "avoid": 6, "collis": 6, "srting": 6, "format": 6, "classvar": [6, 7, 8], "configdict": [6, 7, 8], "configur": [6, 7, 8], "conform": [6, 7, 8], "pydant": [6, 7, 8], "config": [6, 7, 8], "fieldinfo": [6, 7, 8], "annot": [6, 7, 8], "requir": [6, 7, 8], "about": [6, 7, 8], "map": [6, 7, 8, 17], "__fields__": [6, 7, 8], "v1": [6, 7, 8], "rendered_queri": 6, "last_queri": 6, "get_keys_from_list_of_dict": 6, "replace_original_table_refer": 6, "mock_tabl": 6, "orign": 6, "point": [6, 11], "select_from_ct": 6, "statement": 6, "select_ct": 6, "note": [6, 18], "validate_input_mock": 6, "precis": [7, 8], "scale": [7, 8], "_case_sensit": [7, 8], "_env_prefix": [7, 8], "_env_fil": [7, 8], "dotenvtyp": [7, 8], "posixpath": [7, 8], "_env_file_encod": [7, 8], "_env_nested_delimit": [7, 8], "_secrets_dir": [7, 8], "baseset": [7, 8], "settingsconfigdict": [7, 8], "arbitrary_types_allow": [7, 8], "case_sensit": [7, 8], "env_fil": [7, 8], "env_file_encod": [7, 8], "env_nested_delimit": [7, 8], "env_prefix": [7, 8], "forbid": [7, 8], "protected_namespac": [7, 8], "model_": [7, 8], "settings_": [7, 8], "secrets_dir": [7, 8], "validate_default": [7, 8], "arg": [7, 8], "kwarg": [7, 8], "sql_mock_clickhouse_": 8, "usert": [9, 12, 17], "user_id": [9, 12, 17, 18], "user_nam": [9, 12, 17], "mr": [9, 12, 17], "subscriptiont": [9, 12, 17], "subscription_id": [9, 12, 17], "period_start_d": [9, 12, 17], "2023": [9, 12, 17, 18], "9": [9, 12, 17], "5": [9, 12, 17], "period_end_d": [9, 12, 17], "subscriptioncountt": [9, 12], "subscription_count": [9, 12, 17], "left": [9, 12, 17], "join": [9, 12, 17], "group": [9, 12, 17], "BY": [9, 12, 17], "simul": [9, 12], "section": [10, 13, 15], "document": [10, 13], "ensur": 11, "environ": [11, 14], "variabl": [11, 14, 18], "correctli": 11, "servic": 11, "account": 11, "while": 11, "sql_mock_clickhouse_host": 14, "sql_mock_clickhouse_us": 14, "sql_mock_clickhouse_password": 14, "sql_mock_clickhouse_port": 14, "enabl": 14, "upstream": 15, "central": 15, "where": [15, 17, 18], "reus": [15, 18], "across": 15, "goign": 15, "mention": 15, "referenc": 15, "product": 15, "pattern": 15, "schema": 15, "current": 15, "u": 15, "onc": [15, 18], "whatev": [15, 18], "wa": [15, 18], "read": 15, "detail": 15, "handl": 15, "found": 15, "folder": 16, "check": 17, "output": 17, "given": [17, 18], "normal": 17, "full": 17, "lot": 17, "time": 17, "complic": 17, "thei": 17, "bunch": 17, "separ": 17, "step": 17, "unit": 17, "abl": 17, "singl": 17, "To": 17, "assum": [17, 18], "subscriptions_per_us": 17, "sub": 17, "ON": 17, "users_with_multiple_sub": 17, "test_queri": 17, "multiplesubscriptionuserst": 17, "now": 17, "differ": 17, "def": 17, "test_model": 17, "subscriptions_per_user__expect": 17, "users_with_multiple_subs__expect": 17, "end_result__expect": 17, "end": 17, "multipl": 18, "walk": 18, "through": 18, "cover": 18, "bigquerytablemock": 18, "itself": 18, "advantag": 18, "after": 18, "mani": 18, "overwrid": 18, "sometim": 18, "dbt": 18, "necessari": 18, "context": 18, "created_at": 18, "creation_d": 18, "your_input_mock_inst": 18, "09": 18, "05": 18, "automat": 18}, "objects": {"": [[6, 0, 0, "-", "sql_mock"]], "sql_mock": [[7, 0, 0, "-", "bigquery"], [8, 0, 0, "-", "clickhouse"], [6, 0, 0, "-", "column_mocks"], [6, 0, 0, "-", "constants"], [6, 0, 0, "-", "exceptions"], [6, 0, 0, "-", "table_mocks"]], "sql_mock.bigquery": [[7, 0, 0, "-", "column_mocks"], [7, 0, 0, "-", "settings"], [7, 0, 0, "-", "table_mocks"]], "sql_mock.bigquery.column_mocks": [[7, 1, 1, "", "BigQueryColumnMock"], [7, 1, 1, "", "Date"], [7, 1, 1, "", "Decimal"], [7, 1, 1, "", "Float"], [7, 1, 1, "", "Int"], [7, 1, 1, "", "String"]], "sql_mock.bigquery.column_mocks.Date": [[7, 2, 1, "", "dtype"]], "sql_mock.bigquery.column_mocks.Float": [[7, 2, 1, "", "dtype"]], "sql_mock.bigquery.column_mocks.Int": [[7, 2, 1, "", "dtype"]], "sql_mock.bigquery.column_mocks.String": [[7, 2, 1, "", "dtype"]], "sql_mock.bigquery.settings": [[7, 1, 1, "", "BigQuerySettings"]], "sql_mock.bigquery.settings.BigQuerySettings": [[7, 2, 1, "", "google_application_credentials"], [7, 2, 1, "", "model_config"], [7, 2, 1, "", "model_fields"]], "sql_mock.bigquery.table_mocks": [[7, 1, 1, "", "BigQueryMockTable"]], "sql_mock.clickhouse": [[8, 0, 0, "-", "column_mocks"], [8, 0, 0, "-", "settings"], [8, 0, 0, "-", "table_mocks"]], "sql_mock.clickhouse.column_mocks": [[8, 1, 1, "", "Boolean"], [8, 1, 1, "", "ClickhouseColumnMock"], [8, 1, 1, "", "Date"], [8, 1, 1, "", "Datetime"], [8, 1, 1, "", "Datetime64"], [8, 1, 1, "", "Decimal"], [8, 1, 1, "", "Float"], [8, 1, 1, "", "Int"], [8, 1, 1, "", "String"]], "sql_mock.clickhouse.column_mocks.Boolean": [[8, 2, 1, "", "dtype"]], "sql_mock.clickhouse.column_mocks.Date": [[8, 2, 1, "", "dtype"]], "sql_mock.clickhouse.column_mocks.Datetime": [[8, 2, 1, "", "dtype"]], "sql_mock.clickhouse.column_mocks.Datetime64": [[8, 2, 1, "", "dtype"]], "sql_mock.clickhouse.column_mocks.Float": [[8, 2, 1, "", "dtype"]], "sql_mock.clickhouse.column_mocks.Int": [[8, 2, 1, "", "dtype"]], "sql_mock.clickhouse.column_mocks.String": [[8, 2, 1, "", "dtype"]], "sql_mock.clickhouse.settings": [[8, 1, 1, "", "ClickHouseSettings"]], "sql_mock.clickhouse.settings.ClickHouseSettings": [[8, 2, 1, "", "host"], [8, 2, 1, "", "model_config"], [8, 2, 1, "", "model_fields"], [8, 2, 1, "", "password"], [8, 2, 1, "", "port"], [8, 2, 1, "", "user"]], "sql_mock.clickhouse.table_mocks": [[8, 1, 1, "", "ClickHouseTableMock"]], "sql_mock.column_mocks": [[6, 1, 1, "", "ColumnMock"]], "sql_mock.column_mocks.ColumnMock": [[6, 3, 1, "", "cast_field"], [6, 2, 1, "id0", "default"], [6, 2, 1, "id1", "dtype"], [6, 2, 1, "id2", "nullable"], [6, 3, 1, "", "to_sql"]], "sql_mock.constants": [[6, 1, 1, "", "NoInput"]], "sql_mock.exceptions": [[6, 4, 1, "", "ValidationError"]], "sql_mock.table_mocks": [[6, 1, 1, "", "BaseMockTable"], [6, 1, 1, "", "MockTableMeta"], [6, 1, 1, "", "SQLMockData"], [6, 5, 1, "", "get_keys_from_list_of_dicts"], [6, 5, 1, "", "replace_original_table_references"], [6, 5, 1, "", "select_from_cte"], [6, 5, 1, "", "table_meta"], [6, 5, 1, "", "validate_input_mocks"]], "sql_mock.table_mocks.BaseMockTable": [[6, 2, 1, "", "_sql_mock_data"], [6, 2, 1, "", "_sql_mock_meta"], [6, 3, 1, "", "as_sql_input"], [6, 3, 1, "", "assert_cte_equal"], [6, 3, 1, "", "assert_equal"], [6, 3, 1, "", "from_dicts"], [6, 3, 1, "", "from_mocks"]], "sql_mock.table_mocks.MockTableMeta": [[6, 2, 1, "", "model_config"], [6, 2, 1, "", "model_fields"], [6, 2, 1, "id3", "query"], [6, 2, 1, "id4", "table_ref"]], "sql_mock.table_mocks.SQLMockData": [[6, 2, 1, "", "columns"], [6, 2, 1, "", "data"], [6, 2, 1, "", "input_data"], [6, 2, 1, "", "last_query"], [6, 2, 1, "", "model_config"], [6, 2, 1, "", "model_fields"], [6, 2, 1, "", "rendered_query"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:exception", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"]}, "titleterms": {"faq": 0, "my": 0, "databas": [0, 3], "system": 0, "i": 0, "support": 0, "yet": 0, "want": 0, "us": [0, 18], "sql": [0, 3, 18], "mock": [0, 3, 15], "what": 0, "should": 0, "do": 0, "creat": 0, "your": [0, 18], "mocktabl": 0, "class": 0, "columnmock": 0, "contribut": 0, "setup": [0, 1], "am": 0, "miss": 0, "specif": [0, 3], "type": 0, "model": 0, "field": 0, "instal": 1, "recommend": [1, 18], "pytest": 1, "quickstart": 2, "welcom": 3, "": 3, "document": 3, "get": 3, "start": 3, "basic": 3, "usag": 3, "api": 3, "refer": 3, "indic": 3, "tabl": [3, 15], "sql_mock": [4, 6, 7, 8], "packag": [6, 7, 8], "subpackag": 6, "submodul": [6, 7, 8], "column_mock": [6, 7, 8], "modul": [6, 7, 8], "constant": 6, "except": 6, "table_mock": [6, 7, 8], "content": [6, 7, 8], "bigqueri": [7, 9, 10], "set": [7, 8, 11, 14], "clickhous": [8, 12, 13], "exampl": [9, 12, 16], "test": [9, 12, 18], "subscript": [9, 12], "count": [9, 12], "defin": 15, "result": 17, "assert": 17, "queri": 18, "wai": 18, "provid": 18, "option": 18, "1": 18, "table_meta": 18, "decor": 18, "2": 18, "pass": 18, "from_mock": 18, "call": 18, "jinja": 18, "templat": 18}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"FAQ": [[0, "faq"]], "My database system is not supported yet but I want to use SQL Mock. What should I do?": [[0, "my-database-system-is-not-supported-yet-but-i-want-to-use-sql-mock-what-should-i-do"]], "Create your MockTable class": [[0, "create-your-mocktable-class"]], "Create your ColumnMocks": [[0, "create-your-columnmocks"]], "Contribute your database setup": [[0, "contribute-your-database-setup"]], "I am missing a specific ColumnMock type for my model fields": [[0, "i-am-missing-a-specific-columnmock-type-for-my-model-fields"]], "Installation": [[1, "installation"]], "Recommended Setup for Pytest": [[1, "recommended-setup-for-pytest"]], "Quickstart": [[2, "quickstart"]], "Welcome to SQL Mock\u2019s documentation!": [[3, "welcome-to-sql-mock-s-documentation"]], "Getting Started": [[3, null]], "Basic Usage": [[3, null]], "Database Specifics": [[3, null]], "API Reference": [[3, null]], "Indices and tables": [[3, "indices-and-tables"]], "sql_mock": [[4, "sql-mock"]], "sql_mock package": [[6, "sql-mock-package"]], "Subpackages": [[6, "subpackages"]], "Submodules": [[6, "submodules"], [7, "submodules"], [8, "submodules"]], "sql_mock.column_mocks module": [[6, "module-sql_mock.column_mocks"]], "sql_mock.constants module": [[6, "module-sql_mock.constants"]], "sql_mock.exceptions module": [[6, "module-sql_mock.exceptions"]], "sql_mock.table_mocks module": [[6, "module-sql_mock.table_mocks"]], "Module contents": [[6, "module-sql_mock"], [7, "module-sql_mock.bigquery"], [8, "module-sql_mock.clickhouse"]], "sql_mock.bigquery package": [[7, "sql-mock-bigquery-package"]], "sql_mock.bigquery.column_mocks module": [[7, "module-sql_mock.bigquery.column_mocks"]], "sql_mock.bigquery.settings module": [[7, "module-sql_mock.bigquery.settings"]], "sql_mock.bigquery.table_mocks module": [[7, "module-sql_mock.bigquery.table_mocks"]], "sql_mock.clickhouse package": [[8, "sql-mock-clickhouse-package"]], "sql_mock.clickhouse.column_mocks module": [[8, "module-sql_mock.clickhouse.column_mocks"]], "sql_mock.clickhouse.settings module": [[8, "module-sql_mock.clickhouse.settings"]], "sql_mock.clickhouse.table_mocks module": [[8, "module-sql_mock.clickhouse.table_mocks"]], "Example: Testing Subscription Counts in BigQuery": [[9, "example-testing-subscription-counts-in-bigquery"]], "BigQuery": [[10, "bigquery"]], "Settings": [[11, "settings"], [14, "settings"]], "Example: Testing Subscription Counts in ClickHouse": [[12, "example-testing-subscription-counts-in-clickhouse"]], "Clickhouse": [[13, "clickhouse"]], "Defining table mocks": [[15, "defining-table-mocks"]], "Examples": [[16, "examples"]], "Result assertion": [[17, "result-assertion"]], "Your SQL query to test": [[18, "your-sql-query-to-test"]], "Ways to provide your SQL query to be tested": [[18, "ways-to-provide-your-sql-query-to-be-tested"]], "Option 1 (recommended): Use the table_meta decorator": [[18, "option-1-recommended-use-the-table-meta-decorator"]], "Option 2: Pass the query in the .from_mocks call": [[18, "option-2-pass-the-query-in-the-from-mocks-call"]], "Queries with Jinja templates": [[18, "queries-with-jinja-templates"]]}, "indexentries": {"module": [[3, "module-sql_mock"], [6, "module-sql_mock"], [6, "module-sql_mock.column_mocks"], [6, "module-sql_mock.constants"], [6, "module-sql_mock.exceptions"], [6, "module-sql_mock.table_mocks"], [7, "module-sql_mock.bigquery"], [7, "module-sql_mock.bigquery.column_mocks"], [7, "module-sql_mock.bigquery.settings"], [7, "module-sql_mock.bigquery.table_mocks"], [8, "module-sql_mock.clickhouse"], [8, "module-sql_mock.clickhouse.column_mocks"], [8, "module-sql_mock.clickhouse.settings"], [8, "module-sql_mock.clickhouse.table_mocks"]], "sql_mock": [[3, "module-sql_mock"], [6, "module-sql_mock"]], "basemocktable (class in sql_mock.table_mocks)": [[6, "sql_mock.table_mocks.BaseMockTable"]], "columnmock (class in sql_mock.column_mocks)": [[6, "sql_mock.column_mocks.ColumnMock"]], "mocktablemeta (class in sql_mock.table_mocks)": [[6, "sql_mock.table_mocks.MockTableMeta"]], "noinput (class in sql_mock.constants)": [[6, "sql_mock.constants.NoInput"]], "sqlmockdata (class in sql_mock.table_mocks)": [[6, "sql_mock.table_mocks.SQLMockData"]], "validationerror": [[6, "sql_mock.exceptions.ValidationError"]], "_sql_mock_data (sql_mock.table_mocks.basemocktable attribute)": [[6, "sql_mock.table_mocks.BaseMockTable._sql_mock_data"]], "_sql_mock_meta (sql_mock.table_mocks.basemocktable attribute)": [[6, "sql_mock.table_mocks.BaseMockTable._sql_mock_meta"]], "as_sql_input() (sql_mock.table_mocks.basemocktable method)": [[6, "sql_mock.table_mocks.BaseMockTable.as_sql_input"]], "assert_cte_equal() (sql_mock.table_mocks.basemocktable method)": [[6, "sql_mock.table_mocks.BaseMockTable.assert_cte_equal"]], "assert_equal() (sql_mock.table_mocks.basemocktable method)": [[6, "sql_mock.table_mocks.BaseMockTable.assert_equal"]], "cast_field() (sql_mock.column_mocks.columnmock method)": [[6, "sql_mock.column_mocks.ColumnMock.cast_field"]], "columns (sql_mock.table_mocks.sqlmockdata attribute)": [[6, "sql_mock.table_mocks.SQLMockData.columns"]], "data (sql_mock.table_mocks.sqlmockdata attribute)": [[6, "sql_mock.table_mocks.SQLMockData.data"]], "default (sql_mock.column_mocks.columnmock attribute)": [[6, "id0"], [6, "sql_mock.column_mocks.ColumnMock.default"]], "dtype (sql_mock.column_mocks.columnmock attribute)": [[6, "id1"], [6, "sql_mock.column_mocks.ColumnMock.dtype"]], "from_dicts() (sql_mock.table_mocks.basemocktable class method)": [[6, "sql_mock.table_mocks.BaseMockTable.from_dicts"]], "from_mocks() (sql_mock.table_mocks.basemocktable class method)": [[6, "sql_mock.table_mocks.BaseMockTable.from_mocks"]], "get_keys_from_list_of_dicts() (in module sql_mock.table_mocks)": [[6, "sql_mock.table_mocks.get_keys_from_list_of_dicts"]], "input_data (sql_mock.table_mocks.sqlmockdata attribute)": [[6, "sql_mock.table_mocks.SQLMockData.input_data"]], "last_query (sql_mock.table_mocks.sqlmockdata attribute)": [[6, "sql_mock.table_mocks.SQLMockData.last_query"]], "model_config (sql_mock.table_mocks.mocktablemeta attribute)": [[6, "sql_mock.table_mocks.MockTableMeta.model_config"]], "model_config (sql_mock.table_mocks.sqlmockdata attribute)": [[6, "sql_mock.table_mocks.SQLMockData.model_config"]], "model_fields (sql_mock.table_mocks.mocktablemeta attribute)": [[6, "sql_mock.table_mocks.MockTableMeta.model_fields"]], "model_fields (sql_mock.table_mocks.sqlmockdata attribute)": [[6, "sql_mock.table_mocks.SQLMockData.model_fields"]], "nullable (sql_mock.column_mocks.columnmock attribute)": [[6, "id2"], [6, "sql_mock.column_mocks.ColumnMock.nullable"]], "query (sql_mock.table_mocks.mocktablemeta attribute)": [[6, "id3"], [6, "sql_mock.table_mocks.MockTableMeta.query"]], "rendered_query (sql_mock.table_mocks.sqlmockdata attribute)": [[6, "sql_mock.table_mocks.SQLMockData.rendered_query"]], "replace_original_table_references() (in module sql_mock.table_mocks)": [[6, "sql_mock.table_mocks.replace_original_table_references"]], "select_from_cte() (in module sql_mock.table_mocks)": [[6, "sql_mock.table_mocks.select_from_cte"]], "sql_mock.column_mocks": [[6, "module-sql_mock.column_mocks"]], "sql_mock.constants": [[6, "module-sql_mock.constants"]], "sql_mock.exceptions": [[6, "module-sql_mock.exceptions"]], "sql_mock.table_mocks": [[6, "module-sql_mock.table_mocks"]], "table_meta() (in module sql_mock.table_mocks)": [[6, "sql_mock.table_mocks.table_meta"]], "table_ref (sql_mock.table_mocks.mocktablemeta attribute)": [[6, "id4"], [6, "sql_mock.table_mocks.MockTableMeta.table_ref"]], "to_sql() (sql_mock.column_mocks.columnmock method)": [[6, "sql_mock.column_mocks.ColumnMock.to_sql"]], "validate_input_mocks() (in module sql_mock.table_mocks)": [[6, "sql_mock.table_mocks.validate_input_mocks"]], "bigquerycolumnmock (class in sql_mock.bigquery.column_mocks)": [[7, "sql_mock.bigquery.column_mocks.BigQueryColumnMock"]], "bigquerymocktable (class in sql_mock.bigquery.table_mocks)": [[7, "sql_mock.bigquery.table_mocks.BigQueryMockTable"]], "bigquerysettings (class in sql_mock.bigquery.settings)": [[7, "sql_mock.bigquery.settings.BigQuerySettings"]], "date (class in sql_mock.bigquery.column_mocks)": [[7, "sql_mock.bigquery.column_mocks.Date"]], "decimal (class in sql_mock.bigquery.column_mocks)": [[7, "sql_mock.bigquery.column_mocks.Decimal"]], "float (class in sql_mock.bigquery.column_mocks)": [[7, "sql_mock.bigquery.column_mocks.Float"]], "int (class in sql_mock.bigquery.column_mocks)": [[7, "sql_mock.bigquery.column_mocks.Int"]], "string (class in sql_mock.bigquery.column_mocks)": [[7, "sql_mock.bigquery.column_mocks.String"]], "dtype (sql_mock.bigquery.column_mocks.date attribute)": [[7, "sql_mock.bigquery.column_mocks.Date.dtype"]], "dtype (sql_mock.bigquery.column_mocks.float attribute)": [[7, "sql_mock.bigquery.column_mocks.Float.dtype"]], "dtype (sql_mock.bigquery.column_mocks.int attribute)": [[7, "sql_mock.bigquery.column_mocks.Int.dtype"]], "dtype (sql_mock.bigquery.column_mocks.string attribute)": [[7, "sql_mock.bigquery.column_mocks.String.dtype"]], "google_application_credentials (sql_mock.bigquery.settings.bigquerysettings attribute)": [[7, "sql_mock.bigquery.settings.BigQuerySettings.google_application_credentials"]], "model_config (sql_mock.bigquery.settings.bigquerysettings attribute)": [[7, "sql_mock.bigquery.settings.BigQuerySettings.model_config"]], "model_fields (sql_mock.bigquery.settings.bigquerysettings attribute)": [[7, "sql_mock.bigquery.settings.BigQuerySettings.model_fields"]], "sql_mock.bigquery": [[7, "module-sql_mock.bigquery"]], "sql_mock.bigquery.column_mocks": [[7, "module-sql_mock.bigquery.column_mocks"]], "sql_mock.bigquery.settings": [[7, "module-sql_mock.bigquery.settings"]], "sql_mock.bigquery.table_mocks": [[7, "module-sql_mock.bigquery.table_mocks"]], "boolean (class in sql_mock.clickhouse.column_mocks)": [[8, "sql_mock.clickhouse.column_mocks.Boolean"]], "clickhousesettings (class in sql_mock.clickhouse.settings)": [[8, "sql_mock.clickhouse.settings.ClickHouseSettings"]], "clickhousetablemock (class in sql_mock.clickhouse.table_mocks)": [[8, "sql_mock.clickhouse.table_mocks.ClickHouseTableMock"]], "clickhousecolumnmock (class in sql_mock.clickhouse.column_mocks)": [[8, "sql_mock.clickhouse.column_mocks.ClickhouseColumnMock"]], "date (class in sql_mock.clickhouse.column_mocks)": [[8, "sql_mock.clickhouse.column_mocks.Date"]], "datetime (class in sql_mock.clickhouse.column_mocks)": [[8, "sql_mock.clickhouse.column_mocks.Datetime"]], "datetime64 (class in sql_mock.clickhouse.column_mocks)": [[8, "sql_mock.clickhouse.column_mocks.Datetime64"]], "decimal (class in sql_mock.clickhouse.column_mocks)": [[8, "sql_mock.clickhouse.column_mocks.Decimal"]], "float (class in sql_mock.clickhouse.column_mocks)": [[8, "sql_mock.clickhouse.column_mocks.Float"]], "int (class in sql_mock.clickhouse.column_mocks)": [[8, "sql_mock.clickhouse.column_mocks.Int"]], "string (class in sql_mock.clickhouse.column_mocks)": [[8, "sql_mock.clickhouse.column_mocks.String"]], "dtype (sql_mock.clickhouse.column_mocks.boolean attribute)": [[8, "sql_mock.clickhouse.column_mocks.Boolean.dtype"]], "dtype (sql_mock.clickhouse.column_mocks.date attribute)": [[8, "sql_mock.clickhouse.column_mocks.Date.dtype"]], "dtype (sql_mock.clickhouse.column_mocks.datetime attribute)": [[8, "sql_mock.clickhouse.column_mocks.Datetime.dtype"]], "dtype (sql_mock.clickhouse.column_mocks.datetime64 attribute)": [[8, "sql_mock.clickhouse.column_mocks.Datetime64.dtype"]], "dtype (sql_mock.clickhouse.column_mocks.float attribute)": [[8, "sql_mock.clickhouse.column_mocks.Float.dtype"]], "dtype (sql_mock.clickhouse.column_mocks.int attribute)": [[8, "sql_mock.clickhouse.column_mocks.Int.dtype"]], "dtype (sql_mock.clickhouse.column_mocks.string attribute)": [[8, "sql_mock.clickhouse.column_mocks.String.dtype"]], "host (sql_mock.clickhouse.settings.clickhousesettings attribute)": [[8, "sql_mock.clickhouse.settings.ClickHouseSettings.host"]], "model_config (sql_mock.clickhouse.settings.clickhousesettings attribute)": [[8, "sql_mock.clickhouse.settings.ClickHouseSettings.model_config"]], "model_fields (sql_mock.clickhouse.settings.clickhousesettings attribute)": [[8, "sql_mock.clickhouse.settings.ClickHouseSettings.model_fields"]], "password (sql_mock.clickhouse.settings.clickhousesettings attribute)": [[8, "sql_mock.clickhouse.settings.ClickHouseSettings.password"]], "port (sql_mock.clickhouse.settings.clickhousesettings attribute)": [[8, "sql_mock.clickhouse.settings.ClickHouseSettings.port"]], "sql_mock.clickhouse": [[8, "module-sql_mock.clickhouse"]], "sql_mock.clickhouse.column_mocks": [[8, "module-sql_mock.clickhouse.column_mocks"]], "sql_mock.clickhouse.settings": [[8, "module-sql_mock.clickhouse.settings"]], "sql_mock.clickhouse.table_mocks": [[8, "module-sql_mock.clickhouse.table_mocks"]], "user (sql_mock.clickhouse.settings.clickhousesettings attribute)": [[8, "sql_mock.clickhouse.settings.ClickHouseSettings.user"]]}})