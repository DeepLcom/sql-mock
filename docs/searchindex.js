Search.setIndex({"docnames": ["faq", "getting_started/installation", "getting_started/quickstart", "index", "modules", "robots", "sql_mock", "sql_mock.bigquery", "sql_mock.clickhouse", "sql_mock.redshift", "sql_mock.snowflake", "usage/bigquery/examples", "usage/bigquery/index", "usage/bigquery/settings", "usage/clickhouse/examples", "usage/clickhouse/index", "usage/clickhouse/settings", "usage/dbt", "usage/default_values", "usage/defining_table_mocks", "usage/examples", "usage/redshift/examples", "usage/redshift/index", "usage/redshift/settings", "usage/result_assertion", "usage/snowflake/examples", "usage/snowflake/index", "usage/snowflake/settings", "usage/your_sql_query_to_test"], "filenames": ["faq.md", "getting_started/installation.md", "getting_started/quickstart.md", "index.rst", "modules.rst", "robots.txt", "sql_mock.rst", "sql_mock.bigquery.rst", "sql_mock.clickhouse.rst", "sql_mock.redshift.rst", "sql_mock.snowflake.rst", "usage/bigquery/examples.md", "usage/bigquery/index.rst", "usage/bigquery/settings.md", "usage/clickhouse/examples.md", "usage/clickhouse/index.rst", "usage/clickhouse/settings.md", "usage/dbt.md", "usage/default_values.md", "usage/defining_table_mocks.md", "usage/examples.md", "usage/redshift/examples.md", "usage/redshift/index.rst", "usage/redshift/settings.md", "usage/result_assertion.md", "usage/snowflake/examples.md", "usage/snowflake/index.rst", "usage/snowflake/settings.md", "usage/your_sql_query_to_test.md"], "titles": ["FAQ", "Installation", "Quickstart", "Welcome to SQL Mock\u2019s documentation!", "sql_mock", "&lt;no title&gt;", "sql_mock package", "sql_mock.bigquery package", "sql_mock.clickhouse package", "sql_mock.redshift package", "sql_mock.snowflake package", "Example: Testing Subscription Counts in BigQuery", "BigQuery", "Settings", "Example: Testing Subscription Counts in ClickHouse", "Clickhouse", "Settings", "Use with dbt", "Default values", "Defining table mocks", "Examples", "Example: Testing Subscription Counts in Redshift", "Redshift", "Settings", "Result assertion", "Example: Testing Subscription Counts in Snowflake", "Snowflake", "Settings", "Your SQL query to test"], "terms": {"we": [0, 1, 2, 6, 17, 18, 19, 24, 28], "ar": [0, 1, 6, 17, 18, 19, 24, 28], "plan": 0, "add": [0, 1, 6], "more": [0, 2, 19, 24], "howev": 0, "you": [0, 1, 2, 6, 13, 16, 17, 18, 19, 20, 23, 24, 27, 28], "can": [0, 1, 2, 6, 17, 18, 19, 20, 24, 28], "still": 0, "There": [0, 19, 24, 28], "onli": [0, 6, 18, 19, 24, 28], "2": [0, 2, 3, 11, 14, 18, 19, 21, 24, 25], "thing": [0, 19], "need": [0, 1, 3, 6, 13, 16, 18, 19, 23, 27, 28], "first": 0, "inherit": [0, 6, 11, 14, 19, 21, 25], "from": [0, 1, 2, 6, 7, 8, 9, 10, 11, 14, 17, 19, 21, 24, 25, 28], "sql_mock": [0, 1, 2, 11, 14, 17, 19, 21, 24, 25], "table_mock": [0, 2, 11, 14, 17, 19, 21, 24, 25], "basemockt": [0, 6, 7, 8, 9, 10, 19], "That": 0, "implement": [0, 18], "_get_result": 0, "method": [0, 1, 2, 18, 19, 24, 28], "which": [0, 6, 17], "make": [0, 1, 17], "sure": [0, 1, 17], "fetch": 0, "result": [0, 2, 3, 6, 11, 14, 17, 19, 21, 25], "queri": [0, 2, 3, 6, 11, 14, 18, 19, 21, 24, 25], "e": [0, 2, 6, 19, 28], "g": [0, 2, 6, 19, 28], "produc": [0, 17], "self": 0, "_generate_queri": 0, "return": [0, 6], "list": [0, 6], "dictionari": [0, 2, 6, 7, 8, 9, 10, 28], "look": 0, "one": [0, 6, 18], "exist": 0, "client": 0, "librari": [0, 1, 3, 17], "see": 0, "how": [0, 2, 12, 15, 17, 18, 19, 22, 24, 26, 28], "thi": [0, 1, 2, 3, 6, 7, 8, 9, 10, 12, 15, 17, 19, 22, 24, 26, 28], "could": 0, "work": [0, 2, 17, 18], "bigquerymockt": [0, 2, 6, 7, 11, 17, 18, 19, 24], "might": 0, "set": [0, 3, 6, 12, 15, 22, 26], "well": [0, 19], "case": [0, 3, 18, 24, 28], "some": [0, 2, 19, 20, 28], "connect": [0, 13, 16, 23, 27], "avail": [0, 2], "within": [0, 6], "In": [0, 1, 2, 13, 16, 18, 23, 24, 27, 28], "order": [0, 6, 13, 16, 23, 27], "them": [0, 19, 28], "column": [0, 2, 6, 17, 18], "column_mock": [0, 2, 11, 14, 19, 21, 24, 25], "base": [0, 2, 6, 7, 8, 9, 10], "For": [0, 17, 18], "most": 0, "specifi": [0, 2, 18, 19, 28], "dtype": [0, 6, 7, 8, 9, 10], "pars": 0, "input": [0, 2, 3, 6, 17, 18, 19, 24, 28], "A": [0, 6, 17, 24], "good": 0, "practis": 0, "all": [0, 1, 2, 6, 18, 19], "import": [0, 1, 2, 11, 14, 17, 19, 21, 24, 25], "myfancedatabasecolumnmock": 0, "logic": [0, 18, 24], "overwrit": [0, 6, 19], "default": [0, 2, 3, 6, 7, 8, 9, 10, 11, 14, 17, 19, 21, 24, 25, 28], "behavior": 0, "so": 0, "here": [0, 17, 18], "pass": [0, 3, 18, 19], "int": [0, 2, 6, 7, 8, 9, 11, 14, 17, 18, 19, 24, 28], "integ": [0, 7, 8, 9, 10, 21, 25], "string": [0, 2, 6, 7, 8, 10, 11, 14, 17, 18, 19, 24, 25, 28], "definit": [0, 18, 19], "folk": 0, "commun": 0, "just": 0, "feel": 0, "free": 0, "pr": 0, "repositori": 0, "start": [0, 2, 17], "basic": [0, 18], "happen": [0, 6], "don": [0, 2, 18], "t": [0, 2, 11, 14, 18, 21, 24, 25], "find": [0, 20], "luckili": 0, "easili": [0, 19], "those": [0, 16, 19, 23, 24, 27, 28], "tool": [0, 17], "provid": [0, 2, 3, 6, 16, 17, 18, 19, 23, 27], "The": [0, 1, 3, 6, 17, 18, 19, 23, 27, 28], "bigquerycolumnmock": [0, 6, 7], "write": [0, 3], "usual": [0, 19], "correct": [0, 18], "would": [0, 6], "later": 0, "cast": [0, 2, 6], "col": [0, 2, 11, 14, 17, 18, 19, 21, 24, 25, 28], "express": [0, 2], "replac": [0, 2, 6, 7, 8, 9, 10], "bigqueri": [0, 1, 3, 6, 13, 17, 19, 24], "myfancymissingcoltyp": 0, "fancymissingcoltyp": 0, "addit": [0, 18], "forget": 0, "pypi": 1, "us": [1, 2, 3, 6, 11, 12, 13, 14, 15, 16, 19, 21, 22, 23, 24, 25, 26, 27], "pip": 1, "upgrad": 1, "sql": [1, 2, 5, 6, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27], "mock": [1, 2, 5, 6, 11, 12, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28], "clickhous": [1, 2, 3, 6, 16], "redshift": [1, 3, 23], "If": [1, 6], "modifi": 1, "sourc": [1, 3], "code": [1, 18], "depend": 1, "poetri": 1, "extra": [1, 7, 8, 9, 10], "conftest": 1, "py": [1, 19, 28], "file": [1, 6, 13, 17, 19, 28], "root": 1, "your": [1, 2, 3, 11, 14, 16, 18, 19, 21, 23, 24, 25, 27], "project": [1, 17], "follow": [1, 16, 23, 24, 27, 28], "line": 1, "register_assert_rewrit": 1, "allow": [1, 3, 18, 19], "get": [1, 2], "rich": 1, "comparison": [1, 6], "when": [1, 3, 6, 16, 19, 23, 24, 27, 28], "assert_equ": [1, 2, 6, 11, 14, 17, 21, 24, 25], "tabl": [1, 2, 6, 11, 14, 18, 21, 24, 25, 28], "instanc": [1, 2, 6, 16, 18, 19, 23, 24, 27, 28], "also": [1, 19, 24, 28], "icdiff": 1, "better": 1, "visibl": 1, "diff": 1, "fail": [1, 6], "test": [1, 3, 6, 12, 13, 15, 16, 18, 19, 22, 23, 24, 26, 27], "befor": 2, "dive": 2, "specif": [2, 12, 15, 18, 22, 26, 28], "databas": [2, 6, 9, 17, 19], "scenario": [2, 3, 18], "let": [2, 13, 17, 18, 24, 28], "": [2, 6, 17, 18, 24, 28], "simplifi": [2, 3, 18], "exampl": [2, 3, 12, 15, 18, 22, 24, 26, 28], "behind": 2, "scene": 2, "have": [2, 13, 16, 19, 23, 24, 27], "an": [2, 18], "origin": [2, 6, 11, 14, 21, 25], "path": [2, 3, 6, 7, 8, 9, 10, 18, 19, 28], "query_for_result_t": [2, 19, 28], "select": [2, 11, 14, 19, 21, 24, 25, 28], "id": [2, 19, 28], "data": [2, 3, 6, 11, 14, 18, 19, 21, 24, 25, 28], "table1": [2, 19], "defin": [2, 3, 6, 7, 8, 9, 10, 11, 14, 18, 21, 24, 25, 28], "built": [2, 24], "type": [2, 3, 6], "includ": [2, 24], "date": [2, 6, 7, 8, 9, 10, 11, 14, 17, 21, 24, 25], "each": 2, "ha": [2, 17], "own": 2, "subclass": 2, "class": [2, 3, 6, 7, 8, 9, 10, 11, 14, 17, 18, 19, 21, 24, 25, 28], "fit": 2, "along": 2, "valu": [2, 3, 6], "our": [2, 24], "clickhousetablemock": [2, 6, 8, 14], "table_meta": [2, 3, 6, 11, 14, 19, 21, 24, 25], "table_ref": [2, 6, 11, 14, 18, 19, 21, 24, 25, 28], "1": [2, 3, 6, 11, 14, 18, 19, 21, 24, 25], "name": [2, 6, 7, 8, 9, 10, 17, 19, 27], "peter": [2, 19], "result_t": [2, 19, 28], "query_path": [2, 6, 18, 19, 24, 28], "resultt": [2, 19, 28], "creat": [2, 3, 6, 11, 14, 18, 19, 21, 25], "repres": [2, 6], "row": [2, 6], "kei": [2, 6], "correspond": 2, "user_data": 2, "both": 2, "martin": 2, "3": [2, 3, 18], "input_table_mock": 2, "from_dict": [2, 6, 11, 14, 17, 18, 21, 24, 25], "from_mock": [2, 3, 6, 11, 14, 17, 18, 19, 21, 24, 25], "object": [2, 6, 10], "gener": [2, 6], "re": [2, 11, 14, 18, 19, 21, 24, 25, 28], "input_data": [2, 6, 11, 14, 17, 18, 19, 21, 24, 25, 28], "refer": [2, 6], "common": 2, "cte": [2, 6, 24], "fill": [2, 18], "dummi": 2, "It": [2, 3, 6], "roughli": 2, "compar": [2, 6], "someth": 2, "like": [2, 6, 19], "WITH": [2, 24], "data__table1": 2, "AS": [2, 11, 14, 21, 24, 25, 28], "union": [2, 6], "final": [2, 6, 24], "expect": [2, 6, 11, 14, 17, 21, 25], "primari": 3, "purpos": 3, "i": [3, 6, 17, 19, 28], "model": [3, 6, 7, 8, 9, 10, 11, 14, 19, 21, 24, 25, 28], "user": [3, 5, 6, 8, 9, 10, 11, 14, 16, 18, 21, 23, 24, 25, 27, 28], "variou": [3, 18], "consist": [3, 18], "conveni": 3, "wai": [3, 18, 19, 24], "execut": 3, "without": 3, "process": [3, 6, 18], "massiv": 3, "amount": [3, 17], "instal": [3, 17], "recommend": [3, 19], "setup": [3, 18], "pytest": 3, "quickstart": 3, "faq": 3, "my": 3, "system": 3, "support": 3, "yet": 3, "want": [3, 6, 16, 19, 24, 28], "what": 3, "should": [3, 6, 7, 8, 9, 10], "do": [3, 24], "mocktabl": [3, 6, 19], "columnmock": [3, 6, 7, 8, 9, 10], "contribut": 3, "am": 3, "miss": 3, "field": [3, 6, 7, 8, 9, 10], "dbt": [3, 28], "introduct": 3, "prerequisit": 3, "configur": [3, 6, 7, 8, 9, 10], "manifest": 3, "seed": 3, "upstream": [3, 19], "step": [3, 18, 24], "option": 3, "decor": [3, 6, 17, 18, 19], "call": 3, "jinja": [3, 6], "templat": [3, 6], "assert": [3, 6, 11, 14, 21, 25], "util": 3, "subscript": [3, 12, 15, 18, 22, 24, 26], "count": [3, 12, 15, 22, 24, 26], "index": 3, "modul": 3, "search": 3, "page": 3, "agent": 5, "sitemap": 5, "http": 5, "deeplcom": 5, "github": 5, "io": 5, "xml": 5, "arrai": [6, 7, 8, 10], "use_quotes_for_cast": [6, 7, 8, 10], "decim": [6, 7, 8, 9, 10], "float": [6, 7, 8, 10, 17], "bigqueryset": [6, 7], "google_application_credenti": [6, 7, 13], "model_config": [6, 7, 8, 9, 10], "model_field": [6, 7, 8, 9, 10], "boolean": [6, 8, 9, 10], "clickhousecolumnmock": [6, 8], "datetim": [6, 8, 11, 14, 17, 21, 24, 25], "datetime64": [6, 8], "clickhouseset": [6, 8], "host": [6, 8, 9, 16, 23], "password": [6, 8, 9, 10, 16, 23, 27], "port": [6, 8, 9, 16, 23], "none": [6, 7, 8, 9, 10], "nullabl": [6, 7, 8, 9, 10], "fals": [6, 7, 8, 9, 10], "str": [6, 7, 8, 9, 10], "indic": 6, "whether": 6, "null": 6, "quot": 6, "bool": [6, 7, 8, 9, 10], "cast_field": 6, "column_nam": 6, "to_sql": 6, "noinput": 6, "true": [6, 7, 8, 9, 10], "validationerror": 6, "dict": [6, 7, 8, 9, 10], "sql_mock_data": 6, "sqlmockdata": 6, "attribut": [6, 17], "col1": 6, "_sql_mock_data": 6, "store": 6, "automatci": 6, "instanti": 6, "_sql_dialect": 6, "dialect": 6, "leverag": 6, "sqlglot": 6, "as_sql_input": 6, "combin": [6, 18], "assert_cte_equ": [6, 24], "cte_nam": 6, "ignore_missing_kei": 6, "ignore_ord": 6, "print_query_on_fail": 6, "equal": 6, "paramet": 6, "against": 6, "present": 6, "argument": [6, 18, 19, 28], "ignor": 6, "print": 6, "consol": 6, "output": [6, 24], "classmethod": 6, "query_template_kwarg": [6, 28], "run": [6, 13, 16, 17, 23, 24, 27], "static": [6, 17], "hold": 6, "pair": 6, "render": [6, 28], "cl": 6, "_sql_mock_meta": 6, "mocktablemeta": 6, "default_input": [6, 18, 19], "basemodel": 6, "metadata": [6, 7, 8, 9, 10], "dure": 6, "avoid": 6, "collis": 6, "srting": 6, "format": 6, "properti": 6, "classvar": [6, 7, 8, 9, 10], "configdict": [6, 7, 8, 9, 10], "arbitrary_types_allow": [6, 7, 8, 9, 10], "conform": [6, 7, 8, 9, 10], "pydant": [6, 7, 8, 9, 10], "config": [6, 7, 8, 9, 10, 17], "fieldinfo": [6, 7, 8, 9, 10], "annot": [6, 7, 8, 9, 10], "skipvalid": 6, "requir": [6, 7, 8, 9, 10, 18], "about": [6, 7, 8, 9, 10], "map": [6, 7, 8, 9, 10, 24], "__fields__": [6, 7, 8, 9, 10], "v1": [6, 7, 8, 9, 10], "rendered_queri": 6, "last_queri": 6, "note": [6, 28], "serv": 6, "other": [6, 17, 18], "inner_dtyp": [7, 8], "precis": [7, 8, 9, 10], "scale": [7, 8, 9, 10], "_case_sensit": [7, 8, 9, 10], "_env_prefix": [7, 8, 9, 10], "_env_fil": [7, 8, 9, 10], "dotenvtyp": [7, 8, 9, 10], "posixpath": [7, 8, 9, 10], "_env_file_encod": [7, 8, 9, 10], "_env_nested_delimit": [7, 8, 9, 10], "_secrets_dir": [7, 8, 9, 10], "baseset": [7, 8, 9, 10], "settingsconfigdict": [7, 8, 9, 10], "case_sensit": [7, 8, 9, 10], "env_fil": [7, 8, 9, 10], "env_file_encod": [7, 8, 9, 10], "env_nested_delimit": [7, 8, 9, 10], "env_prefix": [7, 8, 9, 10], "forbid": [7, 8, 9, 10], "protected_namespac": [7, 8, 9, 10], "model_": [7, 8, 9, 10], "settings_": [7, 8, 9, 10], "secrets_dir": [7, 8, 9, 10], "validate_default": [7, 8, 9, 10], "arg": [7, 8, 9, 10], "kwarg": [7, 8, 9, 10], "sql_mock_clickhouse_": 8, "bigint": 9, "redshiftcolumnmock": 9, "char": 9, "double_precis": 9, "doubl": 9, "geographi": [9, 10], "geometri": 9, "hllsketch": 9, "real": 9, "smallint": 9, "super": 9, "time": [9, 10, 18, 24], "timestamp": [9, 10], "timestamptz": 9, "timetz": 9, "varbyt": 9, "varchar": [9, 21], "redshiftset": 9, "5439": 9, "sql_mock_redshift_": 9, "redshiftmockt": [9, 21], "usert": [11, 14, 18, 21, 24, 25], "user_id": [11, 14, 17, 18, 21, 24, 25, 28], "user_nam": [11, 14, 18, 21, 24, 25], "mr": [11, 14, 18, 21, 24, 25], "subscriptiont": [11, 14, 18, 21, 24, 25], "subscription_id": [11, 14, 18, 21, 24, 25], "period_start_d": [11, 14, 21, 24, 25], "2023": [11, 14, 17, 21, 24, 25, 28], "9": [11, 14, 21, 24, 25], "5": [11, 14, 21, 24, 25], "period_end_d": [11, 14, 21, 24, 25], "subscriptioncountt": [11, 14, 21, 25], "subscription_count": [11, 14, 21, 24, 25], "left": [11, 14, 18, 21, 24, 25], "join": [11, 14, 18, 21, 24, 25], "group": [11, 14, 21, 24, 25], "BY": [11, 14, 21, 24, 25], "simul": [11, 14, 21, 25], "section": [12, 15, 19, 22, 26], "document": [12, 15, 22, 26], "ensur": [13, 18], "environ": [13, 16, 17, 23, 27], "variabl": [13, 16, 23, 27, 28], "correctli": [13, 18], "point": 13, "servic": 13, "account": [10, 13, 27], "while": 13, "sql_mock_clickhouse_host": 16, "sql_mock_clickhouse_us": 16, "sql_mock_clickhouse_password": 16, "sql_mock_clickhouse_port": 16, "enabl": [16, 23, 27], "guid": 17, "quick": 17, "sqlmock": [17, 18], "build": 17, "ll": 17, "cover": [17, 28], "featur": 17, "effect": [17, 18], "unit": [17, 24], "json": 17, "latest": 17, "compil": 17, "python": 17, "initi": 17, "global": 17, "sqlmockconfig": 17, "set_dbt_manifest_path": 17, "offer": 17, "special": 17, "differ": [17, 18, 24], "entiti": 17, "dbt_model_meta": 17, "suit": 17, "transform": 17, "model_nam": 17, "your_dbt_model_nam": 17, "yourdbtmodelt": 17, "necessari": [17, 28], "dbt_source_meta": 17, "ideal": 17, "raw": 17, "consum": 17, "source_nam": 17, "your_source_nam": 17, "table_nam": 17, "your_source_t": 17, "yourdbtsourcet": 17, "load": 17, "dbt_seed_meta": 17, "seed_nam": 17, "your_dbt_seed_nam": 17, "yourdbtseedt": 17, "consid": [17, 18], "monthly_user_spend": 17, "aggreg": 17, "user_transact": 17, "user_categori": 17, "transact": 17, "usertransactionst": 17, "transaction_id": 17, "0": 17, "transaction_d": 17, "12": 17, "24": 17, "usercategoriest": 17, "categori": 17, "foo": 17, "monthlyuserspendt": 17, "month": 17, "total_spend": 17, "def": [17, 24, 25], "test_monthly_user_spend_model": 17, "transactions_data": 17, "120": 17, "10": 17, "150": 17, "20": 17, "categories_data": 17, "premium": 17, "standard": 17, "transactions_t": 17, "categories_t": 17, "expected_output": 17, "01": 17, "monthly_spend_t": 17, "often": 18, "involv": 18, "repetit": 18, "streamlin": 18, "By": 18, "reason": 18, "significantli": 18, "reduc": 18, "boilerpl": 18, "especi": 18, "deal": 18, "multipl": [18, 28], "complex": 18, "explor": 18, "effici": 18, "level": [18, 19], "straightforward": 18, "across": [18, 19], "thei": [18, 24], "particularli": 18, "function": 18, "oper": 18, "empti": 18, "overrid": 18, "nala": 18, "No": 18, "accept": 18, "test_queri": [18, 24], "multiplesubscriptionuserst": [18, 24], "up": 18, "demonstr": 18, "safe": 18, "chang": 18, "singl": [18, 24], "rest": 18, "happi": 18, "valid": 18, "syntax": 18, "minim": 18, "subset": 18, "certain": 18, "help": 18, "focu": 18, "numer": 18, "between": 18, "frequent": 18, "new": 18, "prevent": 18, "extens": 18, "refactor": 18, "central": 19, "where": [19, 24, 28], "reus": [19, 28], "goign": 19, "mention": 19, "referenc": 19, "product": 19, "pattern": 19, "schema": 19, "current": 19, "u": 19, "onc": [19, 28], "whatev": [19, 28], "wa": [19, 28], "read": 19, "detail": 19, "handl": 19, "found": 19, "folder": 20, "sql_mock_redshift_host": 23, "sql_mock_redshift_us": 23, "sql_mock_redshift_password": 23, "sql_mock_redshift_port": 23, "check": 24, "given": [24, 28], "normal": 24, "full": 24, "lot": 24, "complic": 24, "bunch": 24, "separ": 24, "abl": 24, "To": 24, "assum": [24, 28], "subscriptions_per_us": 24, "sub": 24, "ON": 24, "users_with_multiple_sub": 24, "now": 24, "test_model": 24, "subscriptions_per_user__expect": 24, "users_with_multiple_subs__expect": 24, "end_result__expect": 24, "end": 24, "walk": 28, "through": 28, "bigquerytablemock": 28, "itself": 28, "advantag": 28, "after": 28, "mani": 28, "overwrid": 28, "sometim": 28, "context": 28, "created_at": 28, "creation_d": 28, "your_input_mock_inst": 28, "09": 28, "05": 28, "automat": 28, "snowflak": [1, 3, 27], "snowflakecolumnmock": 10, "binari": 10, "text": 10, "timestamp_ltz": 10, "timestamp_ntz": 10, "timestamp_tz": 10, "variant": 10, "snowflakeset": 10, "sql_mock_snowflake_": 10, "snowflakemockt": [10, 25], "test_someth": 25, "sql_mock_snowflake_account": 27, "sql_mock_snowflake_us": 27, "sql_mock_snowflake_password": 27}, "objects": {"": [[6, 0, 0, "-", "sql_mock"]], "sql_mock": [[7, 0, 0, "-", "bigquery"], [8, 0, 0, "-", "clickhouse"], [6, 0, 0, "-", "column_mocks"], [6, 0, 0, "-", "constants"], [6, 0, 0, "-", "exceptions"], [9, 0, 0, "-", "redshift"], [10, 0, 0, "-", "snowflake"], [6, 0, 0, "-", "table_mocks"]], "sql_mock.bigquery": [[7, 0, 0, "-", "column_mocks"], [7, 0, 0, "-", "settings"], [7, 0, 0, "-", "table_mocks"]], "sql_mock.bigquery.column_mocks": [[7, 1, 1, "", "Array"], [7, 1, 1, "", "BigQueryColumnMock"], [7, 1, 1, "", "Date"], [7, 1, 1, "", "Decimal"], [7, 1, 1, "", "Float"], [7, 1, 1, "", "Int"], [7, 1, 1, "", "String"]], "sql_mock.bigquery.column_mocks.Array": [[7, 2, 1, "", "use_quotes_for_casting"]], "sql_mock.bigquery.column_mocks.Date": [[7, 2, 1, "", "dtype"]], "sql_mock.bigquery.column_mocks.Float": [[7, 2, 1, "", "dtype"]], "sql_mock.bigquery.column_mocks.Int": [[7, 2, 1, "", "dtype"]], "sql_mock.bigquery.column_mocks.String": [[7, 2, 1, "", "dtype"]], "sql_mock.bigquery.settings": [[7, 1, 1, "", "BigQuerySettings"]], "sql_mock.bigquery.settings.BigQuerySettings": [[7, 2, 1, "", "google_application_credentials"], [7, 2, 1, "", "model_config"], [7, 2, 1, "", "model_fields"]], "sql_mock.bigquery.table_mocks": [[7, 1, 1, "", "BigQueryMockTable"]], "sql_mock.clickhouse": [[8, 0, 0, "-", "column_mocks"], [8, 0, 0, "-", "settings"], [8, 0, 0, "-", "table_mocks"]], "sql_mock.clickhouse.column_mocks": [[8, 1, 1, "", "Array"], [8, 1, 1, "", "Boolean"], [8, 1, 1, "", "ClickhouseColumnMock"], [8, 1, 1, "", "Date"], [8, 1, 1, "", "Datetime"], [8, 1, 1, "", "Datetime64"], [8, 1, 1, "", "Decimal"], [8, 1, 1, "", "Float"], [8, 1, 1, "", "Int"], [8, 1, 1, "", "String"]], "sql_mock.clickhouse.column_mocks.Array": [[8, 2, 1, "", "use_quotes_for_casting"]], "sql_mock.clickhouse.column_mocks.Boolean": [[8, 2, 1, "", "dtype"]], "sql_mock.clickhouse.column_mocks.Date": [[8, 2, 1, "", "dtype"]], "sql_mock.clickhouse.column_mocks.Datetime": [[8, 2, 1, "", "dtype"]], "sql_mock.clickhouse.column_mocks.Datetime64": [[8, 2, 1, "", "dtype"]], "sql_mock.clickhouse.column_mocks.Float": [[8, 2, 1, "", "dtype"]], "sql_mock.clickhouse.column_mocks.Int": [[8, 2, 1, "", "dtype"]], "sql_mock.clickhouse.column_mocks.String": [[8, 2, 1, "", "dtype"]], "sql_mock.clickhouse.settings": [[8, 1, 1, "", "ClickHouseSettings"]], "sql_mock.clickhouse.settings.ClickHouseSettings": [[8, 2, 1, "", "host"], [8, 2, 1, "", "model_config"], [8, 2, 1, "", "model_fields"], [8, 2, 1, "", "password"], [8, 2, 1, "", "port"], [8, 2, 1, "", "user"]], "sql_mock.clickhouse.table_mocks": [[8, 1, 1, "", "ClickHouseTableMock"]], "sql_mock.column_mocks": [[6, 1, 1, "", "ColumnMock"]], "sql_mock.column_mocks.ColumnMock": [[6, 3, 1, "", "cast_field"], [6, 2, 1, "id0", "default"], [6, 2, 1, "id1", "dtype"], [6, 2, 1, "id2", "nullable"], [6, 3, 1, "", "to_sql"], [6, 2, 1, "id3", "use_quotes_for_casting"]], "sql_mock.constants": [[6, 1, 1, "", "NoInput"]], "sql_mock.exceptions": [[6, 4, 1, "", "ValidationError"]], "sql_mock.redshift": [[9, 0, 0, "-", "column_mocks"], [9, 0, 0, "-", "settings"], [9, 0, 0, "-", "table_mocks"]], "sql_mock.redshift.column_mocks": [[9, 1, 1, "", "BIGINT"], [9, 1, 1, "", "BOOLEAN"], [9, 1, 1, "", "CHAR"], [9, 1, 1, "", "DATE"], [9, 1, 1, "", "DECIMAL"], [9, 1, 1, "", "DOUBLE_PRECISION"], [9, 1, 1, "", "GEOGRAPHY"], [9, 1, 1, "", "GEOMETRY"], [9, 1, 1, "", "HLLSKETCH"], [9, 1, 1, "", "INTEGER"], [9, 1, 1, "", "REAL"], [9, 1, 1, "", "RedshiftColumnMock"], [9, 1, 1, "", "SMALLINT"], [9, 1, 1, "", "SUPER"], [9, 1, 1, "", "TIME"], [9, 1, 1, "", "TIMESTAMP"], [9, 1, 1, "", "TIMESTAMPTZ"], [9, 1, 1, "", "TIMETZ"], [9, 1, 1, "", "VARBYTE"], [9, 1, 1, "", "VARCHAR"]], "sql_mock.redshift.column_mocks.BIGINT": [[9, 2, 1, "", "dtype"]], "sql_mock.redshift.column_mocks.BOOLEAN": [[9, 2, 1, "", "dtype"]], "sql_mock.redshift.column_mocks.CHAR": [[9, 2, 1, "", "dtype"]], "sql_mock.redshift.column_mocks.DATE": [[9, 2, 1, "", "dtype"]], "sql_mock.redshift.column_mocks.DOUBLE_PRECISION": [[9, 2, 1, "", "dtype"]], "sql_mock.redshift.column_mocks.GEOGRAPHY": [[9, 2, 1, "", "dtype"]], "sql_mock.redshift.column_mocks.GEOMETRY": [[9, 2, 1, "", "dtype"]], "sql_mock.redshift.column_mocks.HLLSKETCH": [[9, 2, 1, "", "dtype"]], "sql_mock.redshift.column_mocks.INTEGER": [[9, 2, 1, "", "dtype"]], "sql_mock.redshift.column_mocks.REAL": [[9, 2, 1, "", "dtype"]], "sql_mock.redshift.column_mocks.SMALLINT": [[9, 2, 1, "", "dtype"]], "sql_mock.redshift.column_mocks.SUPER": [[9, 2, 1, "", "dtype"]], "sql_mock.redshift.column_mocks.TIME": [[9, 2, 1, "", "dtype"]], "sql_mock.redshift.column_mocks.TIMESTAMP": [[9, 2, 1, "", "dtype"]], "sql_mock.redshift.column_mocks.TIMESTAMPTZ": [[9, 2, 1, "", "dtype"]], "sql_mock.redshift.column_mocks.TIMETZ": [[9, 2, 1, "", "dtype"]], "sql_mock.redshift.column_mocks.VARBYTE": [[9, 2, 1, "", "dtype"]], "sql_mock.redshift.column_mocks.VARCHAR": [[9, 2, 1, "", "dtype"]], "sql_mock.redshift.settings": [[9, 1, 1, "", "RedshiftSettings"]], "sql_mock.redshift.settings.RedshiftSettings": [[9, 2, 1, "", "database"], [9, 2, 1, "", "host"], [9, 2, 1, "", "model_config"], [9, 2, 1, "", "model_fields"], [9, 2, 1, "", "password"], [9, 2, 1, "", "port"], [9, 2, 1, "", "user"]], "sql_mock.redshift.table_mocks": [[9, 1, 1, "", "RedshiftMockTable"]], "sql_mock.snowflake": [[10, 0, 0, "-", "column_mocks"], [10, 0, 0, "-", "settings"], [10, 0, 0, "-", "table_mocks"]], "sql_mock.snowflake.column_mocks": [[10, 1, 1, "", "ARRAY"], [10, 1, 1, "", "BINARY"], [10, 1, 1, "", "BOOLEAN"], [10, 1, 1, "", "DATE"], [10, 1, 1, "", "DECIMAL"], [10, 1, 1, "", "FLOAT"], [10, 1, 1, "", "GEOGRAPHY"], [10, 1, 1, "", "INTEGER"], [10, 1, 1, "", "OBJECT"], [10, 1, 1, "", "STRING"], [10, 1, 1, "", "SnowflakeColumnMock"], [10, 1, 1, "", "TEXT"], [10, 1, 1, "", "TIME"], [10, 1, 1, "", "TIMESTAMP"], [10, 1, 1, "", "TIMESTAMP_LTZ"], [10, 1, 1, "", "TIMESTAMP_NTZ"], [10, 1, 1, "", "TIMESTAMP_TZ"], [10, 1, 1, "", "VARIANT"]], "sql_mock.snowflake.column_mocks.ARRAY": [[10, 2, 1, "", "dtype"], [10, 2, 1, "", "use_quotes_for_casting"]], "sql_mock.snowflake.column_mocks.BINARY": [[10, 2, 1, "", "dtype"]], "sql_mock.snowflake.column_mocks.BOOLEAN": [[10, 2, 1, "", "dtype"]], "sql_mock.snowflake.column_mocks.DATE": [[10, 2, 1, "", "dtype"]], "sql_mock.snowflake.column_mocks.FLOAT": [[10, 2, 1, "", "dtype"]], "sql_mock.snowflake.column_mocks.GEOGRAPHY": [[10, 2, 1, "", "dtype"]], "sql_mock.snowflake.column_mocks.INTEGER": [[10, 2, 1, "", "dtype"]], "sql_mock.snowflake.column_mocks.OBJECT": [[10, 2, 1, "", "dtype"]], "sql_mock.snowflake.column_mocks.STRING": [[10, 2, 1, "", "dtype"]], "sql_mock.snowflake.column_mocks.TEXT": [[10, 2, 1, "", "dtype"]], "sql_mock.snowflake.column_mocks.TIME": [[10, 2, 1, "", "dtype"]], "sql_mock.snowflake.column_mocks.TIMESTAMP": [[10, 2, 1, "", "dtype"]], "sql_mock.snowflake.column_mocks.TIMESTAMP_LTZ": [[10, 2, 1, "", "dtype"]], "sql_mock.snowflake.column_mocks.TIMESTAMP_NTZ": [[10, 2, 1, "", "dtype"]], "sql_mock.snowflake.column_mocks.TIMESTAMP_TZ": [[10, 2, 1, "", "dtype"]], "sql_mock.snowflake.column_mocks.VARIANT": [[10, 2, 1, "", "dtype"]], "sql_mock.snowflake.settings": [[10, 1, 1, "", "SnowflakeSettings"]], "sql_mock.snowflake.settings.SnowflakeSettings": [[10, 2, 1, "", "account"], [10, 2, 1, "", "model_config"], [10, 2, 1, "", "model_fields"], [10, 2, 1, "", "password"], [10, 2, 1, "", "user"]], "sql_mock.snowflake.table_mocks": [[10, 1, 1, "", "SnowflakeMockTable"]], "sql_mock.table_mocks": [[6, 1, 1, "", "BaseMockTable"], [6, 1, 1, "", "MockTableMeta"], [6, 1, 1, "", "SQLMockData"], [6, 6, 1, "", "table_meta"]], "sql_mock.table_mocks.BaseMockTable": [[6, 2, 1, "", "_sql_dialect"], [6, 2, 1, "", "_sql_mock_data"], [6, 3, 1, "", "as_sql_input"], [6, 3, 1, "", "assert_cte_equal"], [6, 3, 1, "", "assert_equal"], [6, 3, 1, "", "from_dicts"], [6, 3, 1, "", "from_mocks"]], "sql_mock.table_mocks.MockTableMeta": [[6, 5, 1, "", "cte_name"], [6, 2, 1, "", "default_inputs"], [6, 2, 1, "", "model_config"], [6, 2, 1, "", "model_fields"], [6, 2, 1, "id4", "query"], [6, 2, 1, "id5", "table_ref"]], "sql_mock.table_mocks.SQLMockData": [[6, 2, 1, "", "columns"], [6, 2, 1, "", "data"], [6, 2, 1, "", "input_data"], [6, 2, 1, "", "last_query"], [6, 2, 1, "", "model_config"], [6, 2, 1, "", "model_fields"], [6, 2, 1, "", "rendered_query"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:exception", "5": "py:property", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "exception", "Python exception"], "5": ["py", "property", "Python property"], "6": ["py", "function", "Python function"]}, "titleterms": {"faq": 0, "my": 0, "databas": [0, 3], "system": 0, "i": [0, 18], "support": 0, "yet": 0, "want": 0, "us": [0, 17, 18, 28], "sql": [0, 3, 28], "mock": [0, 3, 17, 18, 19], "what": 0, "should": 0, "do": 0, "creat": [0, 17], "your": [0, 17, 28], "mocktabl": [0, 18], "class": 0, "columnmock": 0, "contribut": 0, "setup": [0, 1], "am": 0, "miss": 0, "specif": [0, 3], "type": 0, "model": [0, 17], "field": [0, 18], "instal": 1, "recommend": [1, 28], "pytest": 1, "quickstart": 2, "welcom": 3, "": 3, "document": 3, "get": 3, "start": 3, "basic": 3, "usag": 3, "api": 3, "refer": 3, "indic": 3, "tabl": [3, 17, 19], "sql_mock": [4, 6, 7, 8, 9, 10], "packag": [6, 7, 8, 9, 10], "subpackag": 6, "submodul": [6, 7, 8, 9, 10], "column_mock": [6, 7, 8, 9, 10], "modul": [6, 7, 8, 9, 10], "constant": 6, "except": 6, "table_mock": [6, 7, 8, 9, 10], "content": [6, 7, 8, 9, 10], "bigqueri": [7, 11, 12], "set": [7, 8, 9, 10, 13, 16, 17, 18, 23, 27], "clickhous": [8, 14, 15], "redshift": [9, 21, 22], "exampl": [11, 14, 17, 20, 21, 25], "test": [11, 14, 17, 21, 25, 28], "subscript": [11, 14, 21, 25], "count": [11, 14, 21, 25], "dbt": 17, "introduct": 17, "prerequisit": 17, "configur": 17, "manifest": 17, "path": 17, "sourc": 17, "seed": 17, "upstream": 17, "data": 17, "step": 17, "1": [17, 28], "defin": [17, 19], "2": [17, 28], "3": 17, "write": 17, "case": 17, "default": 18, "valu": 18, "util": 18, "table_meta": [18, 28], "when": 18, "thi": 18, "result": 24, "assert": 24, "queri": 28, "wai": 28, "provid": 28, "option": 28, "decor": 28, "pass": 28, "from_mock": 28, "call": 28, "jinja": 28, "templat": 28, "snowflak": [10, 25, 26]}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Quickstart": [[2, "quickstart"]], "sql_mock": [[4, "sql-mock"]], "Example: Testing Subscription Counts in BigQuery": [[11, "example-testing-subscription-counts-in-bigquery"]], "BigQuery": [[12, "bigquery"]], "Settings": [[13, "settings"], [16, "settings"], [23, "settings"], [27, "settings"]], "Example: Testing Subscription Counts in ClickHouse": [[14, "example-testing-subscription-counts-in-clickhouse"]], "Clickhouse": [[15, "clickhouse"]], "Use with dbt": [[17, "use-with-dbt"]], "Introduction": [[17, "introduction"]], "Prerequisites": [[17, "prerequisites"]], "Configuration": [[17, "configuration"]], "Setting the dbt Manifest Path": [[17, "setting-the-dbt-manifest-path"]], "Creating Mock Tables": [[17, "creating-mock-tables"]], "dbt Model Mock Table": [[17, "dbt-model-mock-table"]], "dbt Source Mock Table": [[17, "dbt-source-mock-table"]], "dbt Seed Mock Table": [[17, "dbt-seed-mock-table"]], "Example: Testing a dbt Model with Upstream Source and Seed Data": [[17, "example-testing-a-dbt-model-with-upstream-source-and-seed-data"]], "Step 1: Define Your Source and Seed Mock Tables": [[17, "step-1-define-your-source-and-seed-mock-tables"]], "Step 2: Define Your Model Mock Table": [[17, "step-2-define-your-model-mock-table"]], "Step 3: Write Your Test Case": [[17, "step-3-write-your-test-case"]], "Default values": [[18, "default-values"]], "Utilizing Default Values in MockTable Fields": [[18, "utilizing-default-values-in-mocktable-fields"]], "Setting Mock Defaults with table_meta": [[18, "setting-mock-defaults-with-table-meta"]], "When is this useful?": [[18, "when-is-this-useful"]], "Defining table mocks": [[19, "defining-table-mocks"]], "Examples": [[20, "examples"]], "Result assertion": [[24, "result-assertion"]], "Your SQL query to test": [[28, "your-sql-query-to-test"]], "Ways to provide your SQL query to be tested": [[28, "ways-to-provide-your-sql-query-to-be-tested"]], "Option 1 (recommended): Use the table_meta decorator": [[28, "option-1-recommended-use-the-table-meta-decorator"]], "Option 2: Pass the query in the .from_mocks call": [[28, "option-2-pass-the-query-in-the-from-mocks-call"]], "Queries with Jinja templates": [[28, "queries-with-jinja-templates"]], "FAQ": [[0, "faq"]], "My database system is not supported yet but I want to use SQL Mock. What should I do?": [[0, "my-database-system-is-not-supported-yet-but-i-want-to-use-sql-mock-what-should-i-do"]], "Create your MockTable class": [[0, "create-your-mocktable-class"]], "Create your ColumnMocks": [[0, "create-your-columnmocks"]], "Contribute your database setup": [[0, "contribute-your-database-setup"]], "I am missing a specific ColumnMock type for my model fields": [[0, "i-am-missing-a-specific-columnmock-type-for-my-model-fields"]], "Installation": [[1, "installation"]], "Recommended Setup for Pytest": [[1, "recommended-setup-for-pytest"]], "Welcome to SQL Mock\u2019s documentation!": [[3, "welcome-to-sql-mock-s-documentation"]], "Getting Started": [[3, null]], "Basic Usage": [[3, null]], "Database Specifics": [[3, null]], "API Reference": [[3, null]], "Indices and tables": [[3, "indices-and-tables"]], "sql_mock package": [[6, "sql-mock-package"]], "Subpackages": [[6, "subpackages"]], "Submodules": [[6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"]], "sql_mock.column_mocks module": [[6, "module-sql_mock.column_mocks"]], "sql_mock.constants module": [[6, "module-sql_mock.constants"]], "sql_mock.exceptions module": [[6, "module-sql_mock.exceptions"]], "sql_mock.table_mocks module": [[6, "module-sql_mock.table_mocks"]], "Module contents": [[6, "module-sql_mock"], [7, "module-sql_mock.bigquery"], [8, "module-sql_mock.clickhouse"], [9, "module-sql_mock.redshift"], [10, "module-sql_mock.snowflake"]], "sql_mock.bigquery package": [[7, "sql-mock-bigquery-package"]], "sql_mock.bigquery.column_mocks module": [[7, "module-sql_mock.bigquery.column_mocks"]], "sql_mock.bigquery.settings module": [[7, "module-sql_mock.bigquery.settings"]], "sql_mock.bigquery.table_mocks module": [[7, "module-sql_mock.bigquery.table_mocks"]], "sql_mock.clickhouse package": [[8, "sql-mock-clickhouse-package"]], "sql_mock.clickhouse.column_mocks module": [[8, "module-sql_mock.clickhouse.column_mocks"]], "sql_mock.clickhouse.settings module": [[8, "module-sql_mock.clickhouse.settings"]], "sql_mock.clickhouse.table_mocks module": [[8, "module-sql_mock.clickhouse.table_mocks"]], "sql_mock.redshift package": [[9, "sql-mock-redshift-package"]], "sql_mock.redshift.column_mocks module": [[9, "module-sql_mock.redshift.column_mocks"]], "sql_mock.redshift.settings module": [[9, "module-sql_mock.redshift.settings"]], "sql_mock.redshift.table_mocks module": [[9, "module-sql_mock.redshift.table_mocks"]], "sql_mock.snowflake package": [[10, "sql-mock-snowflake-package"]], "sql_mock.snowflake.column_mocks module": [[10, "module-sql_mock.snowflake.column_mocks"]], "sql_mock.snowflake.settings module": [[10, "module-sql_mock.snowflake.settings"]], "sql_mock.snowflake.table_mocks module": [[10, "module-sql_mock.snowflake.table_mocks"]], "Example: Testing Subscription Counts in Redshift": [[21, "example-testing-subscription-counts-in-redshift"]], "Redshift": [[22, "redshift"]], "Example: Testing Subscription Counts in Snowflake": [[25, "example-testing-subscription-counts-in-snowflake"]], "Snowflake": [[26, "snowflake"]]}, "indexentries": {"module": [[3, "module-sql_mock"], [6, "module-sql_mock"], [6, "module-sql_mock.column_mocks"], [6, "module-sql_mock.constants"], [6, "module-sql_mock.exceptions"], [6, "module-sql_mock.table_mocks"], [7, "module-sql_mock.bigquery"], [7, "module-sql_mock.bigquery.column_mocks"], [7, "module-sql_mock.bigquery.settings"], [7, "module-sql_mock.bigquery.table_mocks"], [8, "module-sql_mock.clickhouse"], [8, "module-sql_mock.clickhouse.column_mocks"], [8, "module-sql_mock.clickhouse.settings"], [8, "module-sql_mock.clickhouse.table_mocks"], [9, "module-sql_mock.redshift"], [9, "module-sql_mock.redshift.column_mocks"], [9, "module-sql_mock.redshift.settings"], [9, "module-sql_mock.redshift.table_mocks"], [10, "module-sql_mock.snowflake"], [10, "module-sql_mock.snowflake.column_mocks"], [10, "module-sql_mock.snowflake.settings"], [10, "module-sql_mock.snowflake.table_mocks"]], "sql_mock": [[3, "module-sql_mock"], [6, "module-sql_mock"]], "basemocktable (class in sql_mock.table_mocks)": [[6, "sql_mock.table_mocks.BaseMockTable"]], "columnmock (class in sql_mock.column_mocks)": [[6, "sql_mock.column_mocks.ColumnMock"]], "mocktablemeta (class in sql_mock.table_mocks)": [[6, "sql_mock.table_mocks.MockTableMeta"]], "noinput (class in sql_mock.constants)": [[6, "sql_mock.constants.NoInput"]], "sqlmockdata (class in sql_mock.table_mocks)": [[6, "sql_mock.table_mocks.SQLMockData"]], "validationerror": [[6, "sql_mock.exceptions.ValidationError"]], "_sql_dialect (sql_mock.table_mocks.basemocktable attribute)": [[6, "sql_mock.table_mocks.BaseMockTable._sql_dialect"]], "_sql_mock_data (sql_mock.table_mocks.basemocktable attribute)": [[6, "sql_mock.table_mocks.BaseMockTable._sql_mock_data"]], "as_sql_input() (sql_mock.table_mocks.basemocktable method)": [[6, "sql_mock.table_mocks.BaseMockTable.as_sql_input"]], "assert_cte_equal() (sql_mock.table_mocks.basemocktable method)": [[6, "sql_mock.table_mocks.BaseMockTable.assert_cte_equal"]], "assert_equal() (sql_mock.table_mocks.basemocktable method)": [[6, "sql_mock.table_mocks.BaseMockTable.assert_equal"]], "cast_field() (sql_mock.column_mocks.columnmock method)": [[6, "sql_mock.column_mocks.ColumnMock.cast_field"]], "columns (sql_mock.table_mocks.sqlmockdata attribute)": [[6, "sql_mock.table_mocks.SQLMockData.columns"]], "cte_name (sql_mock.table_mocks.mocktablemeta property)": [[6, "sql_mock.table_mocks.MockTableMeta.cte_name"]], "data (sql_mock.table_mocks.sqlmockdata attribute)": [[6, "sql_mock.table_mocks.SQLMockData.data"]], "default (sql_mock.column_mocks.columnmock attribute)": [[6, "id0"], [6, "sql_mock.column_mocks.ColumnMock.default"]], "default_inputs (sql_mock.table_mocks.mocktablemeta attribute)": [[6, "sql_mock.table_mocks.MockTableMeta.default_inputs"]], "dtype (sql_mock.column_mocks.columnmock attribute)": [[6, "id1"], [6, "sql_mock.column_mocks.ColumnMock.dtype"]], "from_dicts() (sql_mock.table_mocks.basemocktable class method)": [[6, "sql_mock.table_mocks.BaseMockTable.from_dicts"]], "from_mocks() (sql_mock.table_mocks.basemocktable class method)": [[6, "sql_mock.table_mocks.BaseMockTable.from_mocks"]], "input_data (sql_mock.table_mocks.sqlmockdata attribute)": [[6, "sql_mock.table_mocks.SQLMockData.input_data"]], "last_query (sql_mock.table_mocks.sqlmockdata attribute)": [[6, "sql_mock.table_mocks.SQLMockData.last_query"]], "model_config (sql_mock.table_mocks.mocktablemeta attribute)": [[6, "sql_mock.table_mocks.MockTableMeta.model_config"]], "model_config (sql_mock.table_mocks.sqlmockdata attribute)": [[6, "sql_mock.table_mocks.SQLMockData.model_config"]], "model_fields (sql_mock.table_mocks.mocktablemeta attribute)": [[6, "sql_mock.table_mocks.MockTableMeta.model_fields"]], "model_fields (sql_mock.table_mocks.sqlmockdata attribute)": [[6, "sql_mock.table_mocks.SQLMockData.model_fields"]], "nullable (sql_mock.column_mocks.columnmock attribute)": [[6, "id2"], [6, "sql_mock.column_mocks.ColumnMock.nullable"]], "query (sql_mock.table_mocks.mocktablemeta attribute)": [[6, "id4"], [6, "sql_mock.table_mocks.MockTableMeta.query"]], "rendered_query (sql_mock.table_mocks.sqlmockdata attribute)": [[6, "sql_mock.table_mocks.SQLMockData.rendered_query"]], "sql_mock.column_mocks": [[6, "module-sql_mock.column_mocks"]], "sql_mock.constants": [[6, "module-sql_mock.constants"]], "sql_mock.exceptions": [[6, "module-sql_mock.exceptions"]], "sql_mock.table_mocks": [[6, "module-sql_mock.table_mocks"]], "table_meta() (in module sql_mock.table_mocks)": [[6, "sql_mock.table_mocks.table_meta"]], "table_ref (sql_mock.table_mocks.mocktablemeta attribute)": [[6, "id5"], [6, "sql_mock.table_mocks.MockTableMeta.table_ref"]], "to_sql() (sql_mock.column_mocks.columnmock method)": [[6, "sql_mock.column_mocks.ColumnMock.to_sql"]], "use_quotes_for_casting (sql_mock.column_mocks.columnmock attribute)": [[6, "id3"], [6, "sql_mock.column_mocks.ColumnMock.use_quotes_for_casting"]], "array (class in sql_mock.bigquery.column_mocks)": [[7, "sql_mock.bigquery.column_mocks.Array"]], "bigquerycolumnmock (class in sql_mock.bigquery.column_mocks)": [[7, "sql_mock.bigquery.column_mocks.BigQueryColumnMock"]], "bigquerymocktable (class in sql_mock.bigquery.table_mocks)": [[7, "sql_mock.bigquery.table_mocks.BigQueryMockTable"]], "bigquerysettings (class in sql_mock.bigquery.settings)": [[7, "sql_mock.bigquery.settings.BigQuerySettings"]], "date (class in sql_mock.bigquery.column_mocks)": [[7, "sql_mock.bigquery.column_mocks.Date"]], "decimal (class in sql_mock.bigquery.column_mocks)": [[7, "sql_mock.bigquery.column_mocks.Decimal"]], "float (class in sql_mock.bigquery.column_mocks)": [[7, "sql_mock.bigquery.column_mocks.Float"]], "int (class in sql_mock.bigquery.column_mocks)": [[7, "sql_mock.bigquery.column_mocks.Int"]], "string (class in sql_mock.bigquery.column_mocks)": [[7, "sql_mock.bigquery.column_mocks.String"]], "dtype (sql_mock.bigquery.column_mocks.date attribute)": [[7, "sql_mock.bigquery.column_mocks.Date.dtype"]], "dtype (sql_mock.bigquery.column_mocks.float attribute)": [[7, "sql_mock.bigquery.column_mocks.Float.dtype"]], "dtype (sql_mock.bigquery.column_mocks.int attribute)": [[7, "sql_mock.bigquery.column_mocks.Int.dtype"]], "dtype (sql_mock.bigquery.column_mocks.string attribute)": [[7, "sql_mock.bigquery.column_mocks.String.dtype"]], "google_application_credentials (sql_mock.bigquery.settings.bigquerysettings attribute)": [[7, "sql_mock.bigquery.settings.BigQuerySettings.google_application_credentials"]], "model_config (sql_mock.bigquery.settings.bigquerysettings attribute)": [[7, "sql_mock.bigquery.settings.BigQuerySettings.model_config"]], "model_fields (sql_mock.bigquery.settings.bigquerysettings attribute)": [[7, "sql_mock.bigquery.settings.BigQuerySettings.model_fields"]], "sql_mock.bigquery": [[7, "module-sql_mock.bigquery"]], "sql_mock.bigquery.column_mocks": [[7, "module-sql_mock.bigquery.column_mocks"]], "sql_mock.bigquery.settings": [[7, "module-sql_mock.bigquery.settings"]], "sql_mock.bigquery.table_mocks": [[7, "module-sql_mock.bigquery.table_mocks"]], "use_quotes_for_casting (sql_mock.bigquery.column_mocks.array attribute)": [[7, "sql_mock.bigquery.column_mocks.Array.use_quotes_for_casting"]], "array (class in sql_mock.clickhouse.column_mocks)": [[8, "sql_mock.clickhouse.column_mocks.Array"]], "boolean (class in sql_mock.clickhouse.column_mocks)": [[8, "sql_mock.clickhouse.column_mocks.Boolean"]], "clickhousesettings (class in sql_mock.clickhouse.settings)": [[8, "sql_mock.clickhouse.settings.ClickHouseSettings"]], "clickhousetablemock (class in sql_mock.clickhouse.table_mocks)": [[8, "sql_mock.clickhouse.table_mocks.ClickHouseTableMock"]], "clickhousecolumnmock (class in sql_mock.clickhouse.column_mocks)": [[8, "sql_mock.clickhouse.column_mocks.ClickhouseColumnMock"]], "date (class in sql_mock.clickhouse.column_mocks)": [[8, "sql_mock.clickhouse.column_mocks.Date"]], "datetime (class in sql_mock.clickhouse.column_mocks)": [[8, "sql_mock.clickhouse.column_mocks.Datetime"]], "datetime64 (class in sql_mock.clickhouse.column_mocks)": [[8, "sql_mock.clickhouse.column_mocks.Datetime64"]], "decimal (class in sql_mock.clickhouse.column_mocks)": [[8, "sql_mock.clickhouse.column_mocks.Decimal"]], "float (class in sql_mock.clickhouse.column_mocks)": [[8, "sql_mock.clickhouse.column_mocks.Float"]], "int (class in sql_mock.clickhouse.column_mocks)": [[8, "sql_mock.clickhouse.column_mocks.Int"]], "string (class in sql_mock.clickhouse.column_mocks)": [[8, "sql_mock.clickhouse.column_mocks.String"]], "dtype (sql_mock.clickhouse.column_mocks.boolean attribute)": [[8, "sql_mock.clickhouse.column_mocks.Boolean.dtype"]], "dtype (sql_mock.clickhouse.column_mocks.date attribute)": [[8, "sql_mock.clickhouse.column_mocks.Date.dtype"]], "dtype (sql_mock.clickhouse.column_mocks.datetime attribute)": [[8, "sql_mock.clickhouse.column_mocks.Datetime.dtype"]], "dtype (sql_mock.clickhouse.column_mocks.datetime64 attribute)": [[8, "sql_mock.clickhouse.column_mocks.Datetime64.dtype"]], "dtype (sql_mock.clickhouse.column_mocks.float attribute)": [[8, "sql_mock.clickhouse.column_mocks.Float.dtype"]], "dtype (sql_mock.clickhouse.column_mocks.int attribute)": [[8, "sql_mock.clickhouse.column_mocks.Int.dtype"]], "dtype (sql_mock.clickhouse.column_mocks.string attribute)": [[8, "sql_mock.clickhouse.column_mocks.String.dtype"]], "host (sql_mock.clickhouse.settings.clickhousesettings attribute)": [[8, "sql_mock.clickhouse.settings.ClickHouseSettings.host"]], "model_config (sql_mock.clickhouse.settings.clickhousesettings attribute)": [[8, "sql_mock.clickhouse.settings.ClickHouseSettings.model_config"]], "model_fields (sql_mock.clickhouse.settings.clickhousesettings attribute)": [[8, "sql_mock.clickhouse.settings.ClickHouseSettings.model_fields"]], "password (sql_mock.clickhouse.settings.clickhousesettings attribute)": [[8, "sql_mock.clickhouse.settings.ClickHouseSettings.password"]], "port (sql_mock.clickhouse.settings.clickhousesettings attribute)": [[8, "sql_mock.clickhouse.settings.ClickHouseSettings.port"]], "sql_mock.clickhouse": [[8, "module-sql_mock.clickhouse"]], "sql_mock.clickhouse.column_mocks": [[8, "module-sql_mock.clickhouse.column_mocks"]], "sql_mock.clickhouse.settings": [[8, "module-sql_mock.clickhouse.settings"]], "sql_mock.clickhouse.table_mocks": [[8, "module-sql_mock.clickhouse.table_mocks"]], "use_quotes_for_casting (sql_mock.clickhouse.column_mocks.array attribute)": [[8, "sql_mock.clickhouse.column_mocks.Array.use_quotes_for_casting"]], "user (sql_mock.clickhouse.settings.clickhousesettings attribute)": [[8, "sql_mock.clickhouse.settings.ClickHouseSettings.user"]], "bigint (class in sql_mock.redshift.column_mocks)": [[9, "sql_mock.redshift.column_mocks.BIGINT"]], "boolean (class in sql_mock.redshift.column_mocks)": [[9, "sql_mock.redshift.column_mocks.BOOLEAN"]], "char (class in sql_mock.redshift.column_mocks)": [[9, "sql_mock.redshift.column_mocks.CHAR"]], "date (class in sql_mock.redshift.column_mocks)": [[9, "sql_mock.redshift.column_mocks.DATE"]], "decimal (class in sql_mock.redshift.column_mocks)": [[9, "sql_mock.redshift.column_mocks.DECIMAL"]], "double_precision (class in sql_mock.redshift.column_mocks)": [[9, "sql_mock.redshift.column_mocks.DOUBLE_PRECISION"]], "geography (class in sql_mock.redshift.column_mocks)": [[9, "sql_mock.redshift.column_mocks.GEOGRAPHY"]], "geometry (class in sql_mock.redshift.column_mocks)": [[9, "sql_mock.redshift.column_mocks.GEOMETRY"]], "hllsketch (class in sql_mock.redshift.column_mocks)": [[9, "sql_mock.redshift.column_mocks.HLLSKETCH"]], "integer (class in sql_mock.redshift.column_mocks)": [[9, "sql_mock.redshift.column_mocks.INTEGER"]], "real (class in sql_mock.redshift.column_mocks)": [[9, "sql_mock.redshift.column_mocks.REAL"]], "redshiftcolumnmock (class in sql_mock.redshift.column_mocks)": [[9, "sql_mock.redshift.column_mocks.RedshiftColumnMock"]], "redshiftmocktable (class in sql_mock.redshift.table_mocks)": [[9, "sql_mock.redshift.table_mocks.RedshiftMockTable"]], "redshiftsettings (class in sql_mock.redshift.settings)": [[9, "sql_mock.redshift.settings.RedshiftSettings"]], "smallint (class in sql_mock.redshift.column_mocks)": [[9, "sql_mock.redshift.column_mocks.SMALLINT"]], "super (class in sql_mock.redshift.column_mocks)": [[9, "sql_mock.redshift.column_mocks.SUPER"]], "time (class in sql_mock.redshift.column_mocks)": [[9, "sql_mock.redshift.column_mocks.TIME"]], "timestamp (class in sql_mock.redshift.column_mocks)": [[9, "sql_mock.redshift.column_mocks.TIMESTAMP"]], "timestamptz (class in sql_mock.redshift.column_mocks)": [[9, "sql_mock.redshift.column_mocks.TIMESTAMPTZ"]], "timetz (class in sql_mock.redshift.column_mocks)": [[9, "sql_mock.redshift.column_mocks.TIMETZ"]], "varbyte (class in sql_mock.redshift.column_mocks)": [[9, "sql_mock.redshift.column_mocks.VARBYTE"]], "varchar (class in sql_mock.redshift.column_mocks)": [[9, "sql_mock.redshift.column_mocks.VARCHAR"]], "database (sql_mock.redshift.settings.redshiftsettings attribute)": [[9, "sql_mock.redshift.settings.RedshiftSettings.database"]], "dtype (sql_mock.redshift.column_mocks.bigint attribute)": [[9, "sql_mock.redshift.column_mocks.BIGINT.dtype"]], "dtype (sql_mock.redshift.column_mocks.boolean attribute)": [[9, "sql_mock.redshift.column_mocks.BOOLEAN.dtype"]], "dtype (sql_mock.redshift.column_mocks.char attribute)": [[9, "sql_mock.redshift.column_mocks.CHAR.dtype"]], "dtype (sql_mock.redshift.column_mocks.date attribute)": [[9, "sql_mock.redshift.column_mocks.DATE.dtype"]], "dtype (sql_mock.redshift.column_mocks.double_precision attribute)": [[9, "sql_mock.redshift.column_mocks.DOUBLE_PRECISION.dtype"]], "dtype (sql_mock.redshift.column_mocks.geography attribute)": [[9, "sql_mock.redshift.column_mocks.GEOGRAPHY.dtype"]], "dtype (sql_mock.redshift.column_mocks.geometry attribute)": [[9, "sql_mock.redshift.column_mocks.GEOMETRY.dtype"]], "dtype (sql_mock.redshift.column_mocks.hllsketch attribute)": [[9, "sql_mock.redshift.column_mocks.HLLSKETCH.dtype"]], "dtype (sql_mock.redshift.column_mocks.integer attribute)": [[9, "sql_mock.redshift.column_mocks.INTEGER.dtype"]], "dtype (sql_mock.redshift.column_mocks.real attribute)": [[9, "sql_mock.redshift.column_mocks.REAL.dtype"]], "dtype (sql_mock.redshift.column_mocks.smallint attribute)": [[9, "sql_mock.redshift.column_mocks.SMALLINT.dtype"]], "dtype (sql_mock.redshift.column_mocks.super attribute)": [[9, "sql_mock.redshift.column_mocks.SUPER.dtype"]], "dtype (sql_mock.redshift.column_mocks.time attribute)": [[9, "sql_mock.redshift.column_mocks.TIME.dtype"]], "dtype (sql_mock.redshift.column_mocks.timestamp attribute)": [[9, "sql_mock.redshift.column_mocks.TIMESTAMP.dtype"]], "dtype (sql_mock.redshift.column_mocks.timestamptz attribute)": [[9, "sql_mock.redshift.column_mocks.TIMESTAMPTZ.dtype"]], "dtype (sql_mock.redshift.column_mocks.timetz attribute)": [[9, "sql_mock.redshift.column_mocks.TIMETZ.dtype"]], "dtype (sql_mock.redshift.column_mocks.varbyte attribute)": [[9, "sql_mock.redshift.column_mocks.VARBYTE.dtype"]], "dtype (sql_mock.redshift.column_mocks.varchar attribute)": [[9, "sql_mock.redshift.column_mocks.VARCHAR.dtype"]], "host (sql_mock.redshift.settings.redshiftsettings attribute)": [[9, "sql_mock.redshift.settings.RedshiftSettings.host"]], "model_config (sql_mock.redshift.settings.redshiftsettings attribute)": [[9, "sql_mock.redshift.settings.RedshiftSettings.model_config"]], "model_fields (sql_mock.redshift.settings.redshiftsettings attribute)": [[9, "sql_mock.redshift.settings.RedshiftSettings.model_fields"]], "password (sql_mock.redshift.settings.redshiftsettings attribute)": [[9, "sql_mock.redshift.settings.RedshiftSettings.password"]], "port (sql_mock.redshift.settings.redshiftsettings attribute)": [[9, "sql_mock.redshift.settings.RedshiftSettings.port"]], "sql_mock.redshift": [[9, "module-sql_mock.redshift"]], "sql_mock.redshift.column_mocks": [[9, "module-sql_mock.redshift.column_mocks"]], "sql_mock.redshift.settings": [[9, "module-sql_mock.redshift.settings"]], "sql_mock.redshift.table_mocks": [[9, "module-sql_mock.redshift.table_mocks"]], "user (sql_mock.redshift.settings.redshiftsettings attribute)": [[9, "sql_mock.redshift.settings.RedshiftSettings.user"]], "array (class in sql_mock.snowflake.column_mocks)": [[10, "sql_mock.snowflake.column_mocks.ARRAY"]], "binary (class in sql_mock.snowflake.column_mocks)": [[10, "sql_mock.snowflake.column_mocks.BINARY"]], "boolean (class in sql_mock.snowflake.column_mocks)": [[10, "sql_mock.snowflake.column_mocks.BOOLEAN"]], "date (class in sql_mock.snowflake.column_mocks)": [[10, "sql_mock.snowflake.column_mocks.DATE"]], "decimal (class in sql_mock.snowflake.column_mocks)": [[10, "sql_mock.snowflake.column_mocks.DECIMAL"]], "float (class in sql_mock.snowflake.column_mocks)": [[10, "sql_mock.snowflake.column_mocks.FLOAT"]], "geography (class in sql_mock.snowflake.column_mocks)": [[10, "sql_mock.snowflake.column_mocks.GEOGRAPHY"]], "integer (class in sql_mock.snowflake.column_mocks)": [[10, "sql_mock.snowflake.column_mocks.INTEGER"]], "object (class in sql_mock.snowflake.column_mocks)": [[10, "sql_mock.snowflake.column_mocks.OBJECT"]], "string (class in sql_mock.snowflake.column_mocks)": [[10, "sql_mock.snowflake.column_mocks.STRING"]], "snowflakecolumnmock (class in sql_mock.snowflake.column_mocks)": [[10, "sql_mock.snowflake.column_mocks.SnowflakeColumnMock"]], "snowflakemocktable (class in sql_mock.snowflake.table_mocks)": [[10, "sql_mock.snowflake.table_mocks.SnowflakeMockTable"]], "snowflakesettings (class in sql_mock.snowflake.settings)": [[10, "sql_mock.snowflake.settings.SnowflakeSettings"]], "text (class in sql_mock.snowflake.column_mocks)": [[10, "sql_mock.snowflake.column_mocks.TEXT"]], "time (class in sql_mock.snowflake.column_mocks)": [[10, "sql_mock.snowflake.column_mocks.TIME"]], "timestamp (class in sql_mock.snowflake.column_mocks)": [[10, "sql_mock.snowflake.column_mocks.TIMESTAMP"]], "timestamp_ltz (class in sql_mock.snowflake.column_mocks)": [[10, "sql_mock.snowflake.column_mocks.TIMESTAMP_LTZ"]], "timestamp_ntz (class in sql_mock.snowflake.column_mocks)": [[10, "sql_mock.snowflake.column_mocks.TIMESTAMP_NTZ"]], "timestamp_tz (class in sql_mock.snowflake.column_mocks)": [[10, "sql_mock.snowflake.column_mocks.TIMESTAMP_TZ"]], "variant (class in sql_mock.snowflake.column_mocks)": [[10, "sql_mock.snowflake.column_mocks.VARIANT"]], "account (sql_mock.snowflake.settings.snowflakesettings attribute)": [[10, "sql_mock.snowflake.settings.SnowflakeSettings.account"]], "dtype (sql_mock.snowflake.column_mocks.array attribute)": [[10, "sql_mock.snowflake.column_mocks.ARRAY.dtype"]], "dtype (sql_mock.snowflake.column_mocks.binary attribute)": [[10, "sql_mock.snowflake.column_mocks.BINARY.dtype"]], "dtype (sql_mock.snowflake.column_mocks.boolean attribute)": [[10, "sql_mock.snowflake.column_mocks.BOOLEAN.dtype"]], "dtype (sql_mock.snowflake.column_mocks.date attribute)": [[10, "sql_mock.snowflake.column_mocks.DATE.dtype"]], "dtype (sql_mock.snowflake.column_mocks.float attribute)": [[10, "sql_mock.snowflake.column_mocks.FLOAT.dtype"]], "dtype (sql_mock.snowflake.column_mocks.geography attribute)": [[10, "sql_mock.snowflake.column_mocks.GEOGRAPHY.dtype"]], "dtype (sql_mock.snowflake.column_mocks.integer attribute)": [[10, "sql_mock.snowflake.column_mocks.INTEGER.dtype"]], "dtype (sql_mock.snowflake.column_mocks.object attribute)": [[10, "sql_mock.snowflake.column_mocks.OBJECT.dtype"]], "dtype (sql_mock.snowflake.column_mocks.string attribute)": [[10, "sql_mock.snowflake.column_mocks.STRING.dtype"]], "dtype (sql_mock.snowflake.column_mocks.text attribute)": [[10, "sql_mock.snowflake.column_mocks.TEXT.dtype"]], "dtype (sql_mock.snowflake.column_mocks.time attribute)": [[10, "sql_mock.snowflake.column_mocks.TIME.dtype"]], "dtype (sql_mock.snowflake.column_mocks.timestamp attribute)": [[10, "sql_mock.snowflake.column_mocks.TIMESTAMP.dtype"]], "dtype (sql_mock.snowflake.column_mocks.timestamp_ltz attribute)": [[10, "sql_mock.snowflake.column_mocks.TIMESTAMP_LTZ.dtype"]], "dtype (sql_mock.snowflake.column_mocks.timestamp_ntz attribute)": [[10, "sql_mock.snowflake.column_mocks.TIMESTAMP_NTZ.dtype"]], "dtype (sql_mock.snowflake.column_mocks.timestamp_tz attribute)": [[10, "sql_mock.snowflake.column_mocks.TIMESTAMP_TZ.dtype"]], "dtype (sql_mock.snowflake.column_mocks.variant attribute)": [[10, "sql_mock.snowflake.column_mocks.VARIANT.dtype"]], "model_config (sql_mock.snowflake.settings.snowflakesettings attribute)": [[10, "sql_mock.snowflake.settings.SnowflakeSettings.model_config"]], "model_fields (sql_mock.snowflake.settings.snowflakesettings attribute)": [[10, "sql_mock.snowflake.settings.SnowflakeSettings.model_fields"]], "password (sql_mock.snowflake.settings.snowflakesettings attribute)": [[10, "sql_mock.snowflake.settings.SnowflakeSettings.password"]], "sql_mock.snowflake": [[10, "module-sql_mock.snowflake"]], "sql_mock.snowflake.column_mocks": [[10, "module-sql_mock.snowflake.column_mocks"]], "sql_mock.snowflake.settings": [[10, "module-sql_mock.snowflake.settings"]], "sql_mock.snowflake.table_mocks": [[10, "module-sql_mock.snowflake.table_mocks"]], "use_quotes_for_casting (sql_mock.snowflake.column_mocks.array attribute)": [[10, "sql_mock.snowflake.column_mocks.ARRAY.use_quotes_for_casting"]], "user (sql_mock.snowflake.settings.snowflakesettings attribute)": [[10, "sql_mock.snowflake.settings.SnowflakeSettings.user"]]}})